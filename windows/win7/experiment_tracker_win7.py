# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'experiment_tracker_win7.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox
from PyQt5.QtCore import QDate, QTime
from PyQt5.QtGui import QColor, QIcon

class Ui_ExperimentTracker(object):
    def exportNotes(self,sender, MainWindow, filename=None):
        """Export the notes section."""
        if not filename:
            file_name, _ = QFileDialog.getSaveFileName(MainWindow,"Save Notes Text File","","TXT files (*.txt);; All Files (*)")
            if file_name:
                if ".txt" not in file_name:
                    file_name = file_name + '.txt'
                if sender == "animal":
                    notes = self.experiment_notes.toPlainText()
                elif sender == "imaging":
                    notes = self.info_experiment_notes_imaging.toPlainText()
                elif sender == "ephys":
                    notes = self.info_notes_ephys.toPlainText()
                elif sender == "sim":
                    notes = self.info_notes_sim.toPlainText()
                if file_name:
                    with open(file_name, 'w') as f:
                        f.write(notes)
    
    
    def todayClick(self, sender):        
        """Get the current date."""
        today = QDate.currentDate()
        
        # change the output depending on the tab currently selected
        if sender == "animal":
            self.surgery_date.setDate(today)
        elif sender == "imaging":
            self.info_experiment_date_imaging.setDate(today)
        elif sender == "ephys":
            self.info_experiment_date_ephys.setDate(today)
        elif sender == "sim":
            self.info_experiment_date_sim.setDate(today)
        
        
    def nowClick(self,sender):
        """Get the current time.""" 
        now = QTime.currentTime()
        
        # change the output depending on the tab currently selected
        if sender == 'animal':
            self.surgery_start_time.setTime(now)
        elif sender == 'imaging':
            self.info_experiment_time_imaging.setTime(now)
        elif sender == 'imaging drug':
            self.info_drug_exposure_time_start_imaging.setTime(now)
        elif sender == 'ephys':
            self.info_experiment_time_ephys.setTime(now)
        elif sender == 'ephys drug':
            self.info_drug_exposure_time_start_ephys.setTime(now)
        elif sender == 'sim':
            self.info_experiment_time_sim.setTime(now)
        elif sender == 'sim drug':
            self.info_drug_exposure_time_start_sim.setTime(now)
        
    
    def appendInfo(self, sender):
        """Append new line to the table."""     
        def convert_spin_box_value(value):
                if value < 10:
                    tmp_value = '00' + str(value)
                elif value >= 10 and value < 100:
                    tmp_value = '0' + str(value)
                else:
                    tmp_value = value
                return tmp_value
        # Imaging
        if sender == "imaging":
            # experiment info
            experiment_date = self.info_experiment_date_imaging.date().toString("yyyy-MM-dd") 
            experiment_time = self.info_experiment_time_imaging.time().toString("HH:mm:ss") 
            experiment_type = self.info_experiment_type_imaging.currentText() 
            cell_depth_in_microns = self.info_cell_depth_imaging.text() 
            cell_region = self.info_cell_region_imaging.currentText() 
            
            # imaging info
            isoflurane_percent = self.info_isoflurane_percent_imaging.text() 
            laser_power = self.info_laser_power_imaging.text() 
            height_in_pixels = self.info_height_in_pixels_imaging.text()
            width_in_pixels = self.info_width_in_pixels_imaging.text() 
            num_channels = self.info_num_channels_imaging.text()
            frame_rate = self.info_frame_rate_imaging.text() 
            scan_method = self.info_scan_method_imaging.currentText() 
            indicator = self.info_indicator_imaging.currentText() 
            
            # drug info
            drug_administered = self.info_drug_administered_imaging.text() 
            drug_concentration = self.info_drug_concentration_micromolar_imaging.text() 
            route_of_admin = self.info_drug_route_of_admin_imaging.text() 
            drug_start_time = self.info_drug_exposure_time_start_imaging.time().toString("HH:mm:ss")
            
            # file info, animal id, and notes
            fname = self.info_fname_imaging.text()
            fnum = self.info_fnum_imaging.value()  
            file_name = fname + '-' + str(convert_spin_box_value(fnum))         
            animal_id = self.animal_id.text() 
            notes = self.info_experiment_notes_imaging.toPlainText() 
           
            # Add row to table
            row_position = self.table_data_imaging.rowCount()
            self.table_data_imaging.insertRow(row_position)
            
            # populate the table 
            self.table_data_imaging.setItem(row_position, 0, QtWidgets.QTableWidgetItem(experiment_date))
            self.table_data_imaging.setItem(row_position, 1, QtWidgets.QTableWidgetItem(experiment_time))
            self.table_data_imaging.setItem(row_position, 2, QtWidgets.QTableWidgetItem(experiment_type))
            self.table_data_imaging.setItem(row_position, 3, QtWidgets.QTableWidgetItem(cell_depth_in_microns))
            self.table_data_imaging.setItem(row_position, 4, QtWidgets.QTableWidgetItem(cell_region))
            self.table_data_imaging.setItem(row_position, 5, QtWidgets.QTableWidgetItem(isoflurane_percent))
            self.table_data_imaging.setItem(row_position, 6, QtWidgets.QTableWidgetItem(laser_power))
            self.table_data_imaging.setItem(row_position, 7, QtWidgets.QTableWidgetItem(height_in_pixels))
            self.table_data_imaging.setItem(row_position, 8, QtWidgets.QTableWidgetItem(width_in_pixels))
            self.table_data_imaging.setItem(row_position, 9, QtWidgets.QTableWidgetItem(num_channels))
            self.table_data_imaging.setItem(row_position, 10, QtWidgets.QTableWidgetItem(scan_method))
            self.table_data_imaging.setItem(row_position, 11, QtWidgets.QTableWidgetItem(frame_rate))
            self.table_data_imaging.setItem(row_position, 12, QtWidgets.QTableWidgetItem(indicator))
            self.table_data_imaging.setItem(row_position, 13, QtWidgets.QTableWidgetItem(drug_administered))
            self.table_data_imaging.setItem(row_position, 14, QtWidgets.QTableWidgetItem(drug_concentration))
            self.table_data_imaging.setItem(row_position, 15, QtWidgets.QTableWidgetItem(route_of_admin))
            self.table_data_imaging.setItem(row_position, 16, QtWidgets.QTableWidgetItem(drug_start_time))
            self.table_data_imaging.setItem(row_position, 17, QtWidgets.QTableWidgetItem(animal_id))
            self.table_data_imaging.setItem(row_position, 18, QtWidgets.QTableWidgetItem(file_name))
            self.table_data_imaging.setItem(row_position, 19, QtWidgets.QTableWidgetItem(notes)) 
            
            # Increase the file number
            self.info_fnum_imaging.setValue(fnum + 1)            
                
        # Ephys
        elif sender == "ephys":
            # experiment info
            experiment_date = self.info_experiment_date_ephys.date().toString("yyyy-MM-dd") #0
            experiment_time = self.info_experiment_time_ephys.time().toString("HH:mm:ss") #1
            experiment_type = self.info_experiment_type_ephys.currentText() #3
            cell_depth_microns = self.info_cell_depth_ephys.text() 
            cell_region = self.info_cell_region_ephys.currentText()
            isoflurane_percent = self.info_isoflurane_percent_ephys.text() 
            
            # drug info
            drug_administered = self.info_drug_administered_ephys.text() #13
            drug_concentration = self.info_drug_concentration_micromolar_ephys.text()
            route_of_admin = self.info_drug_route_of_admin_ephys.text() 
            drug_start_time = self.info_drug_exposure_time_start_ephys.time().toString("HH:mm:ss")
            
            # patch info
            pipette_resistance = self.info_pipette_resistance_start_ephys.text()
            seal_resistance = self.info_seal_resistance_start_ephys.text()
            membrane_resistance = self.info_membrane_resistance_ephys.text()
            membrane_capacitance = self.info_membrane_capacitance_ephys.text()
            patch_region = self.info_patch_region_ephys.currentText()
            internal_solution = self.info_internal_solution_ephys.currentText()
            
            # recording info
            clamp_type = self.info_clamp_type_ephys.currentText()
            protocol = self.info_protocol_ephys.text()
            sampling_rate = self.info_sampling_rate_ephys.text()
            
            # file info, animal id, and notes
            fname = self.info_fname_ephys.text()
            fnum = self.info_fnum_ephys.value()  
            file_name = fname + '-' + str(convert_spin_box_value(fnum))           
            animal_id = self.animal_id.text() #16
            notes = self.info_notes_ephys.toPlainText() #19
            
            # Add row to table
            row_position = self.table_data_ephys.rowCount()
            self.table_data_ephys.insertRow(row_position)
            
            # populate the table 
            self.table_data_ephys.setItem(row_position, 0, QtWidgets.QTableWidgetItem(experiment_date))
            self.table_data_ephys.setItem(row_position, 1, QtWidgets.QTableWidgetItem(experiment_time))
            self.table_data_ephys.setItem(row_position, 2, QtWidgets.QTableWidgetItem(experiment_type))
            self.table_data_ephys.setItem(row_position, 3, QtWidgets.QTableWidgetItem(cell_depth_microns))
            self.table_data_ephys.setItem(row_position, 4, QtWidgets.QTableWidgetItem(cell_region))
            self.table_data_ephys.setItem(row_position, 5, QtWidgets.QTableWidgetItem(isoflurane_percent))
            self.table_data_ephys.setItem(row_position, 6, QtWidgets.QTableWidgetItem(internal_solution))
            self.table_data_ephys.setItem(row_position, 7, QtWidgets.QTableWidgetItem(clamp_type))
            self.table_data_ephys.setItem(row_position, 8, QtWidgets.QTableWidgetItem(protocol))
            self.table_data_ephys.setItem(row_position, 9, QtWidgets.QTableWidgetItem(sampling_rate))
            self.table_data_ephys.setItem(row_position, 10, QtWidgets.QTableWidgetItem(pipette_resistance))
            self.table_data_ephys.setItem(row_position, 11, QtWidgets.QTableWidgetItem(seal_resistance))
            self.table_data_ephys.setItem(row_position, 12, QtWidgets.QTableWidgetItem(membrane_resistance))
            self.table_data_ephys.setItem(row_position, 13, QtWidgets.QTableWidgetItem(membrane_capacitance))
            self.table_data_ephys.setItem(row_position, 14, QtWidgets.QTableWidgetItem(patch_region))
            self.table_data_ephys.setItem(row_position, 15, QtWidgets.QTableWidgetItem(drug_administered))
            self.table_data_ephys.setItem(row_position, 16, QtWidgets.QTableWidgetItem(drug_concentration))
            self.table_data_ephys.setItem(row_position, 17, QtWidgets.QTableWidgetItem(route_of_admin))
            self.table_data_ephys.setItem(row_position, 18, QtWidgets.QTableWidgetItem(drug_start_time))
            self.table_data_ephys.setItem(row_position, 19, QtWidgets.QTableWidgetItem(animal_id))
            self.table_data_ephys.setItem(row_position, 20, QtWidgets.QTableWidgetItem(file_name))
            self.table_data_ephys.setItem(row_position, 21, QtWidgets.QTableWidgetItem(notes))
            
            # Increase the file number
            self.info_fnum_ephys.setValue(fnum + 1)  
                              
        # Simultaneous
        elif sender == "sim":
            # experiment info
            experiment_date = self.info_experiment_date_sim.date().toString("yyyy-MM-dd") 
            experiment_time = self.info_experiment_time_sim.time().toString("HH:mm:ss") 
            experiment_type = self.info_experiment_type_sim.currentText() 
            cell_depth_in_microns = self.info_cell_depth_sim.text() 
            cell_region = self.info_cell_region_sim.currentText()
            isoflurane_percent = self.info_isoflurane_percent_sim.text() 
            
            # imaging info
            laser_power = self.info_laser_power_sim.text() 
            height_in_pixels = self.info_height_in_pixels_sim.text() 
            width_in_pixels = self.info_width_in_pixels_sim.text() 
            num_channels = self.info_num_channels_sim.text() 
            frame_rate = self.info_frame_rate_sim.text() 
            scan_method = self.info_scan_method_sim.currentText() 
            indicator = self.info_indicator_sim.currentText() 
            
            # drug info
            drug_administered = self.info_drug_administered_sim.text() 
            drug_concentration = self.info_drug_concentration_micromolar_sim.text()
            route_of_admin = self.info_drug_route_of_admin_sim.text() 
            drug_start_time = self.info_drug_exposure_time_start_sim.time().toString("HH:mm:ss")
            
            # patch info
            pipette_resistance = self.info_pipette_resistance_start_sim.text()
            seal_resistance = self.info_seal_resistance_start_sim.text()
            membrane_resistance = self.info_membrane_resistance_sim.text()
            membrane_capacitance = self.info_membrane_capacitance_sim.text()
            patch_region = self.info_patch_region_sim.currentText()
            internal_solution = self.info_internal_solution_sim.currentText()
            
            # recording info
            clamp_type = self.info_clamp_type_sim.currentText()
            protocol = self.info_protocol_sim.text()
            sampling_rate = self.info_sampling_rate_sim.text()
            
            # file info, animal id, and notes
            imaging_fname = self.info_fname_imaging_sim.text()
            imaging_fnum = self.info_fnum_imaging_sim.value() 
            ephys_fname = self.info_fname_ephys_sim.text()
            ephys_fnum = self.info_fnum_ephys_sim.value() 
            ephys_file_name = ephys_fname + '-' + str(convert_spin_box_value(ephys_fnum))
            imaging_file_name = imaging_fname + '-' + str(convert_spin_box_value(imaging_fnum))
            animal_id = self.animal_id.text() 
            notes = self.info_notes_sim.toPlainText() 
            
            # Add row to table
            row_position = self.table_data_sim.rowCount()
            self.table_data_sim.insertRow(row_position)
            
            self.table_data_sim.setItem(row_position, 0, QtWidgets.QTableWidgetItem(experiment_date))
            self.table_data_sim.setItem(row_position, 1, QtWidgets.QTableWidgetItem(experiment_time))
            self.table_data_sim.setItem(row_position, 2, QtWidgets.QTableWidgetItem(experiment_type))
            self.table_data_sim.setItem(row_position, 3, QtWidgets.QTableWidgetItem(cell_depth_in_microns))          
            self.table_data_sim.setItem(row_position, 4, QtWidgets.QTableWidgetItem(cell_region))                          
            self.table_data_sim.setItem(row_position, 5, QtWidgets.QTableWidgetItem(isoflurane_percent))
            self.table_data_sim.setItem(row_position, 6, QtWidgets.QTableWidgetItem(laser_power))                           
            self.table_data_sim.setItem(row_position, 7, QtWidgets.QTableWidgetItem(height_in_pixels))                            
            self.table_data_sim.setItem(row_position, 8, QtWidgets.QTableWidgetItem(width_in_pixels))    
            self.table_data_sim.setItem(row_position, 9, QtWidgets.QTableWidgetItem(num_channels))                            
            self.table_data_sim.setItem(row_position, 10, QtWidgets.QTableWidgetItem(scan_method))
            self.table_data_sim.setItem(row_position, 11, QtWidgets.QTableWidgetItem(frame_rate))
            self.table_data_sim.setItem(row_position, 12, QtWidgets.QTableWidgetItem(indicator))
            self.table_data_sim.setItem(row_position, 13, QtWidgets.QTableWidgetItem(internal_solution))
            self.table_data_sim.setItem(row_position, 14, QtWidgets.QTableWidgetItem(clamp_type))
            self.table_data_sim.setItem(row_position, 15, QtWidgets.QTableWidgetItem(protocol))
            self.table_data_sim.setItem(row_position, 16, QtWidgets.QTableWidgetItem(sampling_rate))
            self.table_data_sim.setItem(row_position, 17, QtWidgets.QTableWidgetItem(pipette_resistance))
            self.table_data_sim.setItem(row_position, 18, QtWidgets.QTableWidgetItem(seal_resistance))
            self.table_data_sim.setItem(row_position, 19, QtWidgets.QTableWidgetItem(membrane_resistance))
            self.table_data_sim.setItem(row_position, 20, QtWidgets.QTableWidgetItem(membrane_capacitance))
            self.table_data_sim.setItem(row_position, 21, QtWidgets.QTableWidgetItem(patch_region))
            self.table_data_sim.setItem(row_position, 22, QtWidgets.QTableWidgetItem(drug_administered))
            self.table_data_sim.setItem(row_position, 23, QtWidgets.QTableWidgetItem(drug_concentration))
            self.table_data_sim.setItem(row_position, 24, QtWidgets.QTableWidgetItem(route_of_admin))
            self.table_data_sim.setItem(row_position, 25, QtWidgets.QTableWidgetItem(drug_start_time))
            self.table_data_sim.setItem(row_position, 26, QtWidgets.QTableWidgetItem(animal_id))
            self.table_data_sim.setItem(row_position, 27, QtWidgets.QTableWidgetItem(imaging_file_name))
            self.table_data_sim.setItem(row_position, 28, QtWidgets.QTableWidgetItem(ephys_file_name))
            self.table_data_sim.setItem(row_position, 29, QtWidgets.QTableWidgetItem(notes))
            
            # Increase the file number
            self.info_fnum_imaging_sim.setValue(imaging_fnum + 1)
            self.info_fnum_ephys_sim.setValue(ephys_fnum + 1)
    
    def exportInfo(self, sender, MainWindow, filename=None):
        """Export the table to a CSV file."""
        import pandas as pd
        # create a dictionary then store it in a dataframe
        if not filename:
            fileName = QFileDialog.getSaveFileName(MainWindow,"Save File","","CSV files (*.csv);; All Files (*)")
            file_name = fileName[0]
            if file_name:
                if ".csv" not in file_name:
                    file_name = file_name + '.csv'
        if sender == "animal":
            dob = self.animal_dob.date().toString("yyyy-MM-dd") 
            species = self.animal_species.currentText()
            strain = self.animal_strain.currentText()
            sex = self.animal_sex.currentText()
            cage_number = self.animal_cage_number.text()
            animal_id = self.animal_id.text()
            surgery_date = self.surgery_date.date().toString("yyyy-MM-dd") 
            start_time = self.surgery_start_time.time().toString("HH:mm:ss") 
            brain_region = self.animal_brain_region.text()
            notes = self.animal_notes.toPlainText()
            data = {'Variable':['dob',
                                'species',
                                'strain',
                                'sex',
                                'cage_number',
                                'animal_id',
                                'surgery_date',
                                'surgery_start_time',
                                'brain_region',
                                'file_name',
                                'notes'],
                                'Value':[dob,
                                         species,
                                         strain,
                                         sex,
                                         cage_number,
                                         animal_id,
                                         surgery_date,
                                         start_time,
                                         brain_region,
                                         file_name,
                                         notes]}
        elif sender == "imaging":
           table = self.table_data_imaging
           rows = table.rowCount()
           cols = table.columnCount()
           headers = [table.horizontalHeaderItem(i).text() for i in range(cols)]
           data = []
        elif sender == "ephys":
            table = self.table_data_ephys
            rows = table.rowCount()
            cols = table.columnCount()
            headers = [table.horizontalHeaderItem(i).text() for i in range(cols)]
            data = []
        elif sender == "sim":
            table = self.table_data_sim
            rows = table.rowCount()
            cols = table.columnCount()
            headers = [table.horizontalHeaderItem(i).text() for i in range(cols)]
            data = []
        
        
        if sender != "animal":
            for row in range(rows):
                tmp = []
                for col in range(cols):
                    item = table.item(row, col)
                    tmp.append(item.text())
                data.append(tmp)
            df = pd.DataFrame(data, columns=headers)
            df.fillna(value=pd.np.nan, inplace=True)
            if file_name:
                df.to_csv(file_name, index=False)
        else:
            df = pd.DataFrame(data)
            df = df.transpose()
            df.fillna(value=pd.np.nan, inplace=True)
            if file_name:
                df.to_csv(file_name, index=False)
    
            
    
    # do some math
    def calculatePipetteEntry(self):
        """Calculate pipette position to enter the brain."""
        import math
        try:
            try:
                manipulator_angle = float(self.info_manipulator_angle_calc.text())
            except:
                manipulator_angle = 20
            try:
                cell_depth = float(self.info_cell_dept_calc.text())
            except:
                cell_depth = 150
            try:
                cell_distance_glass = float(self.info_glass_distance_calc.text())
            except:
                cell_distance_glass = 150
            try:
                x_start = int(self.info_x_start_calc.text())
            except:
                x_start = 0
            try:
                z_start = int(self.info_z_start_calc.text())
            except:
                z_start = 0  
            
            # convert from degrees to radians
            gamma_angle = math.radians(70)
            manipulator_angle = math.radians(float(manipulator_angle))
            
            # Calculate base distance of entry
            distance_from_cell = (cell_depth * math.sin(gamma_angle)) / (math.sin(manipulator_angle))
            
            # Pipette distance from glass
            pipette_distance_from_glass = distance_from_cell - cell_distance_glass
            
            # X target
            x_tar = x_start - pipette_distance_from_glass
            z_tar = z_start + cell_depth
            
            # Output the measurements
            self.info_entry_dist_from_cell_calc.setText(str(int(distance_from_cell)))
            self.info_entry_dist_from_glass_calc.setText(str(int(pipette_distance_from_glass)))
            self.info_x_tar_calc.setText(str(int(x_tar)))
            self.info_z_tar_calc.setText(str(int(z_tar)))
            
        except:
            self.cell_entry.setText("Error")
    
    def delete_selected_rows(self, sender, MainWindow):
        msgBox = QMessageBox(
        QMessageBox.Question,
        "Delete Selected Rows",
        "Are you sure you want to delete the selected rows?",
        buttons=QMessageBox.Yes | QMessageBox.No
        )
        msgBox.setDefaultButton(QMessageBox.No)
        msgBox.exec_()
        reply = msgBox.standardButton(msgBox.clickedButton())
        if reply == QMessageBox.StandardButton.Yes:
            if sender == "imaging":
               selected_ranges = self.table_data_imaging.selectedRanges()
               for selected_range in selected_ranges:
                   top_row = selected_range.topRow()
                   bottom_row = selected_range.bottomRow()
                   for row in range(top_row, bottom_row + 1):
                       self.table_data_imaging.removeRow(top_row) 
            elif sender == "ephys":
                selected_ranges = self.table_data_ephys.selectedRanges()
                for selected_range in selected_ranges:
                    top_row = selected_range.topRow()
                    bottom_row = selected_range.bottomRow()
                    for row in range(top_row, bottom_row + 1):
                        self.table_data_ephys.removeRow(top_row) 
            elif sender == "sim":
                selected_ranges = self.table_data_sim.selectedRanges()
                for selected_range in selected_ranges:
                    top_row = selected_range.topRow()
                    bottom_row = selected_range.bottomRow()
                    for row in range(top_row, bottom_row + 1):
                        self.table_data_sim.removeRow(top_row)
                        
    
        
             
    def setupUi(self, ExperimentTracker):
        ExperimentTracker.setObjectName("ExperimentTracker")
        ExperimentTracker.resize(784, 1022)
        ExperimentTracker.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(ExperimentTracker)
        self.centralwidget.setStyleSheet("background-color: rgb(58, 58, 58);\n"
"\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(50, 50, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        self.tabWidget.setPalette(palette)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("background-color: rgb(50, 50, 50);\n"
"selection-color: rgb(0, 0, 0);\n"
"gridline-color: rgb(0, 0, 0);\n"
"border-color: rgb(0, 0, 0);\n"
"")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setObjectName("tabWidget")
        self.animal_info = QtWidgets.QWidget()
        self.animal_info.setObjectName("animal_info")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.animal_info)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout_5.addLayout(self.horizontalLayout, 0, 1, 1, 1)
        self.animal_notes = QtWidgets.QTextEdit(self.animal_info)
        self.animal_notes.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.animal_notes.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_notes.setObjectName("animal_notes")
        self.gridLayout_5.addWidget(self.animal_notes, 12, 0, 3, 6)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.animal_export_notes = QtWidgets.QPushButton(self.animal_info)
        self.animal_export_notes.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.animal_export_notes.setObjectName("animal_export_notes")
        self.verticalLayout_2.addWidget(self.animal_export_notes)
        self.animal_export_csv = QtWidgets.QPushButton(self.animal_info)
        self.animal_export_csv.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.animal_export_csv.setObjectName("animal_export_csv")
        self.verticalLayout_2.addWidget(self.animal_export_csv)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.gridLayout_5.addLayout(self.verticalLayout_2, 12, 6, 1, 2)
        self.label_notes = QtWidgets.QLabel(self.animal_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_notes.sizePolicy().hasHeightForWidth())
        self.label_notes.setSizePolicy(sizePolicy)
        self.label_notes.setObjectName("label_notes")
        self.gridLayout_5.addWidget(self.label_notes, 11, 0, 1, 3)
        self.button_select_all_notes_animal_info = QtWidgets.QPushButton(self.animal_info)
        self.button_select_all_notes_animal_info.setStyleSheet("background-color: rgb(255, 255, 0\n"
");")
        self.button_select_all_notes_animal_info.setObjectName("button_select_all_notes_animal_info")
        self.gridLayout_5.addWidget(self.button_select_all_notes_animal_info, 15, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.button_copy_animal_info = QtWidgets.QPushButton(self.animal_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_copy_animal_info.sizePolicy().hasHeightForWidth())
        self.button_copy_animal_info.setSizePolicy(sizePolicy)
        self.button_copy_animal_info.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.button_copy_animal_info.setObjectName("button_copy_animal_info")
        self.horizontalLayout_3.addWidget(self.button_copy_animal_info)
        self.button_clear_animal_info = QtWidgets.QPushButton(self.animal_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_clear_animal_info.sizePolicy().hasHeightForWidth())
        self.button_clear_animal_info.setSizePolicy(sizePolicy)
        self.button_clear_animal_info.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.button_clear_animal_info.setIconSize(QtCore.QSize(16, 16))
        self.button_clear_animal_info.setObjectName("button_clear_animal_info")
        self.horizontalLayout_3.addWidget(self.button_clear_animal_info)
        self.gridLayout_5.addLayout(self.horizontalLayout_3, 15, 4, 1, 2)
        self.formLayout_8 = QtWidgets.QFormLayout()
        self.formLayout_8.setObjectName("formLayout_8")
        self.label_dob = QtWidgets.QLabel(self.animal_info)
        self.label_dob.setStyleSheet("selection-color: rgb(177, 177, 88);")
        self.label_dob.setObjectName("label_dob")
        self.formLayout_8.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_dob)
        self.animal_dob = QtWidgets.QDateEdit(self.animal_info)
        self.animal_dob.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_dob.setDateTime(QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0)))
        self.animal_dob.setTime(QtCore.QTime(0, 0, 0))
        self.animal_dob.setCalendarPopup(True)
        self.animal_dob.setObjectName("animal_dob")
        self.formLayout_8.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.animal_dob)
        self.label_species = QtWidgets.QLabel(self.animal_info)
        self.label_species.setObjectName("label_species")
        self.formLayout_8.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_species)
        self.animal_species = QtWidgets.QComboBox(self.animal_info)
        self.animal_species.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_species.setObjectName("animal_species")
        self.animal_species.addItem("")
        self.animal_species.addItem("")
        self.animal_species.addItem("")
        self.formLayout_8.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.animal_species)
        self.label_strain = QtWidgets.QLabel(self.animal_info)
        self.label_strain.setObjectName("label_strain")
        self.formLayout_8.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_strain)
        self.animal_strain = QtWidgets.QComboBox(self.animal_info)
        self.animal_strain.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_strain.setObjectName("animal_strain")
        self.animal_strain.addItem("")
        self.animal_strain.addItem("")
        self.formLayout_8.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.animal_strain)
        self.label_sex = QtWidgets.QLabel(self.animal_info)
        self.label_sex.setStyleSheet("")
        self.label_sex.setObjectName("label_sex")
        self.formLayout_8.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_sex)
        self.animal_sex = QtWidgets.QComboBox(self.animal_info)
        self.animal_sex.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_sex.setObjectName("animal_sex")
        self.animal_sex.addItem("")
        self.animal_sex.addItem("")
        self.formLayout_8.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.animal_sex)
        self.label_cage_num = QtWidgets.QLabel(self.animal_info)
        self.label_cage_num.setObjectName("label_cage_num")
        self.formLayout_8.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_cage_num)
        self.animal_cage_number = QtWidgets.QLineEdit(self.animal_info)
        self.animal_cage_number.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_cage_number.setObjectName("animal_cage_number")
        self.formLayout_8.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.animal_cage_number)
        self.label_animal_id = QtWidgets.QLabel(self.animal_info)
        self.label_animal_id.setObjectName("label_animal_id")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_animal_id)
        self.animal_id = QtWidgets.QLineEdit(self.animal_info)
        self.animal_id.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_id.setObjectName("animal_id")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.animal_id)
        self.label_sx_date = QtWidgets.QLabel(self.animal_info)
        self.label_sx_date.setObjectName("label_sx_date")
        self.formLayout_8.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_sx_date)
        self.surgery_date = QtWidgets.QDateEdit(self.animal_info)
        self.surgery_date.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.surgery_date.setDateTime(QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0)))
        self.surgery_date.setCalendarPopup(True)
        self.surgery_date.setObjectName("surgery_date")
        self.formLayout_8.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.surgery_date)
        self.label_start_time = QtWidgets.QLabel(self.animal_info)
        self.label_start_time.setObjectName("label_start_time")
        self.formLayout_8.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_start_time)
        self.surgery_start_time = QtWidgets.QTimeEdit(self.animal_info)
        self.surgery_start_time.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.surgery_start_time.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(9, 0, 0)))
        self.surgery_start_time.setObjectName("surgery_start_time")
        self.formLayout_8.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.surgery_start_time)
        self.label_5 = QtWidgets.QLabel(self.animal_info)
        self.label_5.setObjectName("label_5")
        self.formLayout_8.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.animal_brain_region = QtWidgets.QLineEdit(self.animal_info)
        self.animal_brain_region.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.animal_brain_region.setObjectName("animal_brain_region")
        self.formLayout_8.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.animal_brain_region)
        self.heading_animal_info = QtWidgets.QLabel(self.animal_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.heading_animal_info.sizePolicy().hasHeightForWidth())
        self.heading_animal_info.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.heading_animal_info.setFont(font)
        self.heading_animal_info.setObjectName("heading_animal_info")
        self.formLayout_8.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.heading_animal_info)
        spacerItem2 = QtWidgets.QSpacerItem(20, 133, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.formLayout_8.setItem(10, QtWidgets.QFormLayout.FieldRole, spacerItem2)
        self.gridLayout_5.addLayout(self.formLayout_8, 1, 1, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem3)
        self.animal_info_today_button = QtWidgets.QPushButton(self.animal_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.animal_info_today_button.sizePolicy().hasHeightForWidth())
        self.animal_info_today_button.setSizePolicy(sizePolicy)
        self.animal_info_today_button.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.animal_info_today_button.setObjectName("animal_info_today_button")
        self.verticalLayout.addWidget(self.animal_info_today_button)
        self.animal_info_now_time_button = QtWidgets.QPushButton(self.animal_info)
        self.animal_info_now_time_button.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.animal_info_now_time_button.setObjectName("animal_info_now_time_button")
        self.verticalLayout.addWidget(self.animal_info_now_time_button)
        spacerItem4 = QtWidgets.QSpacerItem(20, 208, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout.addItem(spacerItem4)
        self.gridLayout_5.addLayout(self.verticalLayout, 1, 4, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.animal_info)
        self.label_12.setObjectName("label_12")
        self.gridLayout_5.addWidget(self.label_12, 1, 0, 1, 1)
        self.tabWidget.addTab(self.animal_info, "")
        self.imaging_info = QtWidgets.QWidget()
        self.imaging_info.setObjectName("imaging_info")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.imaging_info)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.button_select_all_imaging = QtWidgets.QPushButton(self.imaging_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_select_all_imaging.sizePolicy().hasHeightForWidth())
        self.button_select_all_imaging.setSizePolicy(sizePolicy)
        self.button_select_all_imaging.setStyleSheet("background-color: rgb(255, 255, 0);")
        self.button_select_all_imaging.setObjectName("button_select_all_imaging")
        self.gridLayout_16.addWidget(self.button_select_all_imaging, 19, 5, 1, 1)
        self.button_resize_columns_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_resize_columns_imaging.setStyleSheet("background-color: rgb(255, 85, 127);")
        self.button_resize_columns_imaging.setObjectName("button_resize_columns_imaging")
        self.gridLayout_16.addWidget(self.button_resize_columns_imaging, 19, 0, 1, 1)
        self.gridLayout_18 = QtWidgets.QGridLayout()
        self.gridLayout_18.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.label_pharmacology_imaging = QtWidgets.QLabel(self.imaging_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_pharmacology_imaging.setFont(font)
        self.label_pharmacology_imaging.setObjectName("label_pharmacology_imaging")
        self.gridLayout_18.addWidget(self.label_pharmacology_imaging, 0, 0, 1, 1)
        self.formLayout_41 = QtWidgets.QFormLayout()
        self.formLayout_41.setObjectName("formLayout_41")
        self.label_drug_administered_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_drug_administered_imaging.setObjectName("label_drug_administered_imaging")
        self.formLayout_41.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_drug_administered_imaging)
        self.info_drug_administered_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_drug_administered_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_administered_imaging.setObjectName("info_drug_administered_imaging")
        self.formLayout_41.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_drug_administered_imaging)
        self.label_drug_concentration_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_drug_concentration_imaging.setObjectName("label_drug_concentration_imaging")
        self.formLayout_41.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_drug_concentration_imaging)
        self.info_drug_concentration_micromolar_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_drug_concentration_micromolar_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_concentration_micromolar_imaging.setObjectName("info_drug_concentration_micromolar_imaging")
        self.formLayout_41.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_drug_concentration_micromolar_imaging)
        self.label_drug_route_of_admin_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_drug_route_of_admin_imaging.setObjectName("label_drug_route_of_admin_imaging")
        self.formLayout_41.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_drug_route_of_admin_imaging)
        self.info_drug_route_of_admin_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_drug_route_of_admin_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_route_of_admin_imaging.setObjectName("info_drug_route_of_admin_imaging")
        self.formLayout_41.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_drug_route_of_admin_imaging)
        self.label_drug_exposure_time_start_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_drug_exposure_time_start_imaging.setObjectName("label_drug_exposure_time_start_imaging")
        self.formLayout_41.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_drug_exposure_time_start_imaging)
        self.info_drug_exposure_time_start_imaging = QtWidgets.QTimeEdit(self.imaging_info)
        self.info_drug_exposure_time_start_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_exposure_time_start_imaging.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(9, 0, 0)))
        self.info_drug_exposure_time_start_imaging.setCalendarPopup(True)
        self.info_drug_exposure_time_start_imaging.setObjectName("info_drug_exposure_time_start_imaging")
        self.formLayout_41.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_drug_exposure_time_start_imaging)
        self.gridLayout_18.addLayout(self.formLayout_41, 2, 0, 1, 1)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem5)
        self.button_now_drug_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_now_drug_imaging.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_drug_imaging.setObjectName("button_now_drug_imaging")
        self.verticalLayout_5.addWidget(self.button_now_drug_imaging)
        self.gridLayout_18.addLayout(self.verticalLayout_5, 2, 1, 1, 1)
        self.formLayout_9 = QtWidgets.QFormLayout()
        self.formLayout_9.setObjectName("formLayout_9")
        self.label_fname_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_fname_imaging.setObjectName("label_fname_imaging")
        self.formLayout_9.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_fname_imaging)
        self.info_fname_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_fname_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fname_imaging.setObjectName("info_fname_imaging")
        self.formLayout_9.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_fname_imaging)
        self.label_11 = QtWidgets.QLabel(self.imaging_info)
        self.label_11.setObjectName("label_11")
        self.formLayout_9.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.info_fnum_imaging = QtWidgets.QSpinBox(self.imaging_info)
        self.info_fnum_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fnum_imaging.setObjectName("info_fnum_imaging")
        self.formLayout_9.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_fnum_imaging)
        self.gridLayout_18.addLayout(self.formLayout_9, 2, 2, 1, 1)
        self.label_file_info_imaging = QtWidgets.QLabel(self.imaging_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_file_info_imaging.setFont(font)
        self.label_file_info_imaging.setObjectName("label_file_info_imaging")
        self.gridLayout_18.addWidget(self.label_file_info_imaging, 0, 2, 1, 1)
        self.gridLayout_16.addLayout(self.gridLayout_18, 5, 0, 2, 7)
        self.button_clear_selection_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_clear_selection_imaging.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.button_clear_selection_imaging.setObjectName("button_clear_selection_imaging")
        self.gridLayout_16.addWidget(self.button_clear_selection_imaging, 19, 6, 1, 1)
        self.gridLayout_20 = QtWidgets.QGridLayout()
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.label_notes_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_notes_imaging.setObjectName("label_notes_imaging")
        self.gridLayout_20.addWidget(self.label_notes_imaging, 1, 0, 1, 1)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem6)
        self.button_append_info_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_append_info_imaging.setStyleSheet("background-color: rgb(85, 180, 200);")
        self.button_append_info_imaging.setObjectName("button_append_info_imaging")
        self.verticalLayout_4.addWidget(self.button_append_info_imaging)
        self.button_export_notes_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_export_notes_imaging.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_export_notes_imaging.setObjectName("button_export_notes_imaging")
        self.verticalLayout_4.addWidget(self.button_export_notes_imaging)
        self.button_export_to_csv_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_export_to_csv_imaging.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_export_to_csv_imaging.setObjectName("button_export_to_csv_imaging")
        self.verticalLayout_4.addWidget(self.button_export_to_csv_imaging)
        self.gridLayout_20.addLayout(self.verticalLayout_4, 2, 1, 1, 1)
        self.info_experiment_notes_imaging = QtWidgets.QTextEdit(self.imaging_info)
        self.info_experiment_notes_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_notes_imaging.setObjectName("info_experiment_notes_imaging")
        self.gridLayout_20.addWidget(self.info_experiment_notes_imaging, 2, 0, 1, 1)
        self.gridLayout_16.addLayout(self.gridLayout_20, 15, 0, 1, 7)
        self.gridLayout_17 = QtWidgets.QGridLayout()
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.label_microscope_info_imaging = QtWidgets.QLabel(self.imaging_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_microscope_info_imaging.setFont(font)
        self.label_microscope_info_imaging.setObjectName("label_microscope_info_imaging")
        self.gridLayout_17.addWidget(self.label_microscope_info_imaging, 0, 2, 1, 1)
        self.label_experiment_info_imaging = QtWidgets.QLabel(self.imaging_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_experiment_info_imaging.setFont(font)
        self.label_experiment_info_imaging.setObjectName("label_experiment_info_imaging")
        self.gridLayout_17.addWidget(self.label_experiment_info_imaging, 0, 0, 1, 1)
        self.formLayout_21 = QtWidgets.QFormLayout()
        self.formLayout_21.setObjectName("formLayout_21")
        self.label_experiment_date_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_experiment_date_imaging.setObjectName("label_experiment_date_imaging")
        self.formLayout_21.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_experiment_date_imaging)
        self.info_experiment_date_imaging = QtWidgets.QDateEdit(self.imaging_info)
        self.info_experiment_date_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_date_imaging.setDateTime(QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0)))
        self.info_experiment_date_imaging.setCalendarPopup(True)
        self.info_experiment_date_imaging.setObjectName("info_experiment_date_imaging")
        self.formLayout_21.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_experiment_date_imaging)
        self.label_experiment_time_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_experiment_time_imaging.setObjectName("label_experiment_time_imaging")
        self.formLayout_21.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_experiment_time_imaging)
        self.info_experiment_time_imaging = QtWidgets.QTimeEdit(self.imaging_info)
        self.info_experiment_time_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_time_imaging.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(9, 0, 0)))
        self.info_experiment_time_imaging.setCalendarPopup(True)
        self.info_experiment_time_imaging.setObjectName("info_experiment_time_imaging")
        self.formLayout_21.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_experiment_time_imaging)
        self.label_experiment_type_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_experiment_type_imaging.setObjectName("label_experiment_type_imaging")
        self.formLayout_21.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_experiment_type_imaging)
        self.info_experiment_type_imaging = QtWidgets.QComboBox(self.imaging_info)
        self.info_experiment_type_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_type_imaging.setObjectName("info_experiment_type_imaging")
        self.info_experiment_type_imaging.addItem("")
        self.info_experiment_type_imaging.addItem("")
        self.formLayout_21.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_experiment_type_imaging)
        self.label_cell_depth_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_cell_depth_imaging.setObjectName("label_cell_depth_imaging")
        self.formLayout_21.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_cell_depth_imaging)
        self.info_cell_depth_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_cell_depth_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_depth_imaging.setObjectName("info_cell_depth_imaging")
        self.formLayout_21.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_cell_depth_imaging)
        self.label_cell_region_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_cell_region_imaging.setObjectName("label_cell_region_imaging")
        self.formLayout_21.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_cell_region_imaging)
        self.info_cell_region_imaging = QtWidgets.QComboBox(self.imaging_info)
        self.info_cell_region_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_region_imaging.setObjectName("info_cell_region_imaging")
        self.info_cell_region_imaging.addItem("")
        self.info_cell_region_imaging.addItem("")
        self.info_cell_region_imaging.addItem("")
        self.formLayout_21.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_cell_region_imaging)
        self.label_isoflurane_percent_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_isoflurane_percent_imaging.setObjectName("label_isoflurane_percent_imaging")
        self.formLayout_21.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_isoflurane_percent_imaging)
        self.info_isoflurane_percent_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_isoflurane_percent_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_isoflurane_percent_imaging.setObjectName("info_isoflurane_percent_imaging")
        self.formLayout_21.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_isoflurane_percent_imaging)
        self.gridLayout_17.addLayout(self.formLayout_21, 1, 0, 1, 1)
        self.formLayout_5 = QtWidgets.QFormLayout()
        self.formLayout_5.setObjectName("formLayout_5")
        self.label_laser_power_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_laser_power_imaging.setObjectName("label_laser_power_imaging")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_laser_power_imaging)
        self.label_height_in_pixels_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_height_in_pixels_imaging.setObjectName("label_height_in_pixels_imaging")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_height_in_pixels_imaging)
        self.label_width_in_pixels_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_width_in_pixels_imaging.setObjectName("label_width_in_pixels_imaging")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_width_in_pixels_imaging)
        self.label_num_channels_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_num_channels_imaging.setObjectName("label_num_channels_imaging")
        self.formLayout_5.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_num_channels_imaging)
        self.label_frame_rate_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_frame_rate_imaging.setObjectName("label_frame_rate_imaging")
        self.formLayout_5.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_frame_rate_imaging)
        self.info_laser_power_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_laser_power_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_laser_power_imaging.setObjectName("info_laser_power_imaging")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_laser_power_imaging)
        self.info_height_in_pixels_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_height_in_pixels_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_height_in_pixels_imaging.setObjectName("info_height_in_pixels_imaging")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_height_in_pixels_imaging)
        self.info_width_in_pixels_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_width_in_pixels_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_width_in_pixels_imaging.setObjectName("info_width_in_pixels_imaging")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_width_in_pixels_imaging)
        self.info_num_channels_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_num_channels_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_num_channels_imaging.setObjectName("info_num_channels_imaging")
        self.formLayout_5.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_num_channels_imaging)
        self.info_frame_rate_imaging = QtWidgets.QLineEdit(self.imaging_info)
        self.info_frame_rate_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_frame_rate_imaging.setObjectName("info_frame_rate_imaging")
        self.formLayout_5.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_frame_rate_imaging)
        self.label_scan_method_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_scan_method_imaging.setObjectName("label_scan_method_imaging")
        self.formLayout_5.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_scan_method_imaging)
        self.info_scan_method_imaging = QtWidgets.QComboBox(self.imaging_info)
        self.info_scan_method_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_scan_method_imaging.setObjectName("info_scan_method_imaging")
        self.info_scan_method_imaging.addItem("")
        self.info_scan_method_imaging.addItem("")
        self.info_scan_method_imaging.addItem("")
        self.info_scan_method_imaging.addItem("")
        self.formLayout_5.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_scan_method_imaging)
        self.label_indicator_imaging = QtWidgets.QLabel(self.imaging_info)
        self.label_indicator_imaging.setObjectName("label_indicator_imaging")
        self.formLayout_5.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_indicator_imaging)
        self.info_indicator_imaging = QtWidgets.QComboBox(self.imaging_info)
        self.info_indicator_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_indicator_imaging.setObjectName("info_indicator_imaging")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.info_indicator_imaging.addItem("")
        self.formLayout_5.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.info_indicator_imaging)
        self.gridLayout_17.addLayout(self.formLayout_5, 1, 2, 1, 1)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.button_today_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_today_imaging.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_today_imaging.setObjectName("button_today_imaging")
        self.verticalLayout_3.addWidget(self.button_today_imaging)
        self.button_now_imaging = QtWidgets.QPushButton(self.imaging_info)
        self.button_now_imaging.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_imaging.setObjectName("button_now_imaging")
        self.verticalLayout_3.addWidget(self.button_now_imaging)
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem7)
        self.gridLayout_17.addLayout(self.verticalLayout_3, 1, 1, 1, 1)
        self.gridLayout_16.addLayout(self.gridLayout_17, 1, 0, 2, 7)
        self.table_data_imaging = QtWidgets.QTableWidget(self.imaging_info)
        self.table_data_imaging.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.table_data_imaging.setObjectName("table_data_imaging")
        self.table_data_imaging.setColumnCount(20)
        self.table_data_imaging.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_imaging.setHorizontalHeaderItem(19, item)
        self.gridLayout_16.addWidget(self.table_data_imaging, 18, 0, 1, 7)
        self.tabWidget.addTab(self.imaging_info, "")
        self.ephys_info = QtWidgets.QWidget()
        self.ephys_info.setObjectName("ephys_info")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.ephys_info)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout_22 = QtWidgets.QGridLayout()
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.info_notes_ephys = QtWidgets.QTextEdit(self.ephys_info)
        self.info_notes_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_notes_ephys.setObjectName("info_notes_ephys")
        self.gridLayout_22.addWidget(self.info_notes_ephys, 3, 0, 1, 1)
        self.label_notes_ephys = QtWidgets.QLabel(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_notes_ephys.sizePolicy().hasHeightForWidth())
        self.label_notes_ephys.setSizePolicy(sizePolicy)
        self.label_notes_ephys.setObjectName("label_notes_ephys")
        self.gridLayout_22.addWidget(self.label_notes_ephys, 2, 0, 1, 1, QtCore.Qt.AlignBottom)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem8)
        self.button_append_info_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_append_info_ephys.sizePolicy().hasHeightForWidth())
        self.button_append_info_ephys.setSizePolicy(sizePolicy)
        self.button_append_info_ephys.setMinimumSize(QtCore.QSize(100, 0))
        self.button_append_info_ephys.setMaximumSize(QtCore.QSize(500, 16777215))
        self.button_append_info_ephys.setStyleSheet("background-color: rgb(85, 180, 200);")
        self.button_append_info_ephys.setObjectName("button_append_info_ephys")
        self.verticalLayout_6.addWidget(self.button_append_info_ephys)
        self.button_export_notes_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_export_notes_ephys.sizePolicy().hasHeightForWidth())
        self.button_export_notes_ephys.setSizePolicy(sizePolicy)
        self.button_export_notes_ephys.setMinimumSize(QtCore.QSize(100, 0))
        self.button_export_notes_ephys.setMaximumSize(QtCore.QSize(500, 16777215))
        self.button_export_notes_ephys.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_export_notes_ephys.setObjectName("button_export_notes_ephys")
        self.verticalLayout_6.addWidget(self.button_export_notes_ephys, 0, QtCore.Qt.AlignRight)
        self.button_export_to_csv_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_export_to_csv_ephys.sizePolicy().hasHeightForWidth())
        self.button_export_to_csv_ephys.setSizePolicy(sizePolicy)
        self.button_export_to_csv_ephys.setMinimumSize(QtCore.QSize(100, 0))
        self.button_export_to_csv_ephys.setMaximumSize(QtCore.QSize(113, 16777215))
        self.button_export_to_csv_ephys.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_export_to_csv_ephys.setObjectName("button_export_to_csv_ephys")
        self.verticalLayout_6.addWidget(self.button_export_to_csv_ephys, 0, QtCore.Qt.AlignRight)
        self.gridLayout_22.addLayout(self.verticalLayout_6, 3, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_22, 11, 0, 1, 7)
        self.table_data_ephys = QtWidgets.QTableWidget(self.ephys_info)
        self.table_data_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.table_data_ephys.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.table_data_ephys.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.table_data_ephys.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.table_data_ephys.setObjectName("table_data_ephys")
        self.table_data_ephys.setColumnCount(22)
        self.table_data_ephys.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_ephys.setHorizontalHeaderItem(21, item)
        self.table_data_ephys.horizontalHeader().setVisible(True)
        self.table_data_ephys.horizontalHeader().setSortIndicatorShown(True)
        self.table_data_ephys.horizontalHeader().setStretchLastSection(False)
        self.table_data_ephys.verticalHeader().setCascadingSectionResizes(False)
        self.table_data_ephys.verticalHeader().setSortIndicatorShown(False)
        self.table_data_ephys.verticalHeader().setStretchLastSection(False)
        self.gridLayout_2.addWidget(self.table_data_ephys, 16, 0, 1, 7)
        self.button_new_pipette_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_new_pipette_ephys.sizePolicy().hasHeightForWidth())
        self.button_new_pipette_ephys.setSizePolicy(sizePolicy)
        self.button_new_pipette_ephys.setMinimumSize(QtCore.QSize(200, 0))
        self.button_new_pipette_ephys.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.button_new_pipette_ephys.setObjectName("button_new_pipette_ephys")
        self.gridLayout_2.addWidget(self.button_new_pipette_ephys, 0, 3, 1, 4)
        self.label_patch_info_ephys = QtWidgets.QLabel(self.ephys_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_patch_info_ephys.setFont(font)
        self.label_patch_info_ephys.setObjectName("label_patch_info_ephys")
        self.gridLayout_2.addWidget(self.label_patch_info_ephys, 0, 2, 1, 1)
        self.drug_info_ephys = QtWidgets.QFormLayout()
        self.drug_info_ephys.setObjectName("drug_info_ephys")
        self.label_drug_administered_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_drug_administered_ephys.setObjectName("label_drug_administered_ephys")
        self.drug_info_ephys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_drug_administered_ephys)
        self.info_drug_administered_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_drug_administered_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_administered_ephys.setObjectName("info_drug_administered_ephys")
        self.drug_info_ephys.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_drug_administered_ephys)
        self.label_drug_concentration_micromolar_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_drug_concentration_micromolar_ephys.setObjectName("label_drug_concentration_micromolar_ephys")
        self.drug_info_ephys.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_drug_concentration_micromolar_ephys)
        self.info_drug_concentration_micromolar_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_drug_concentration_micromolar_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_concentration_micromolar_ephys.setObjectName("info_drug_concentration_micromolar_ephys")
        self.drug_info_ephys.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_drug_concentration_micromolar_ephys)
        self.label_drug_route_of_admin_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_drug_route_of_admin_ephys.setObjectName("label_drug_route_of_admin_ephys")
        self.drug_info_ephys.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_drug_route_of_admin_ephys)
        self.info_drug_route_of_admin_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_drug_route_of_admin_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_route_of_admin_ephys.setObjectName("info_drug_route_of_admin_ephys")
        self.drug_info_ephys.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_drug_route_of_admin_ephys)
        self.label_drug_exposure_time_start_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_drug_exposure_time_start_ephys.setObjectName("label_drug_exposure_time_start_ephys")
        self.drug_info_ephys.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_drug_exposure_time_start_ephys)
        self.info_drug_exposure_time_start_ephys = QtWidgets.QTimeEdit(self.ephys_info)
        self.info_drug_exposure_time_start_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_exposure_time_start_ephys.setCalendarPopup(True)
        self.info_drug_exposure_time_start_ephys.setObjectName("info_drug_exposure_time_start_ephys")
        self.drug_info_ephys.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_drug_exposure_time_start_ephys)
        self.gridLayout_2.addLayout(self.drug_info_ephys, 8, 0, 2, 1)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.button_now_drug_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_now_drug_ephys.sizePolicy().hasHeightForWidth())
        self.button_now_drug_ephys.setSizePolicy(sizePolicy)
        self.button_now_drug_ephys.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_drug_ephys.setObjectName("button_now_drug_ephys")
        self.gridLayout_3.addWidget(self.button_now_drug_ephys, 1, 0, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(20, 59, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_3.addItem(spacerItem9, 2, 0, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_3.addItem(spacerItem10, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_3, 8, 1, 2, 1)
        self.label_pharmacology_ephys = QtWidgets.QLabel(self.ephys_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_pharmacology_ephys.setFont(font)
        self.label_pharmacology_ephys.setObjectName("label_pharmacology_ephys")
        self.gridLayout_2.addWidget(self.label_pharmacology_ephys, 7, 0, 1, 2)
        self.experiment_info_ephys = QtWidgets.QFormLayout()
        self.experiment_info_ephys.setObjectName("experiment_info_ephys")
        self.label_experiment_date_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_experiment_date_ephys.setObjectName("label_experiment_date_ephys")
        self.experiment_info_ephys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_experiment_date_ephys)
        self.info_experiment_date_ephys = QtWidgets.QDateEdit(self.ephys_info)
        self.info_experiment_date_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_date_ephys.setCalendarPopup(True)
        self.info_experiment_date_ephys.setObjectName("info_experiment_date_ephys")
        self.experiment_info_ephys.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_experiment_date_ephys)
        self.label_experiment_time_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_experiment_time_ephys.setObjectName("label_experiment_time_ephys")
        self.experiment_info_ephys.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_experiment_time_ephys)
        self.info_experiment_time_ephys = QtWidgets.QTimeEdit(self.ephys_info)
        self.info_experiment_time_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_time_ephys.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(9, 0, 0)))
        self.info_experiment_time_ephys.setCalendarPopup(True)
        self.info_experiment_time_ephys.setObjectName("info_experiment_time_ephys")
        self.experiment_info_ephys.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_experiment_time_ephys)
        self.label_experiment_type_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_experiment_type_ephys.setObjectName("label_experiment_type_ephys")
        self.experiment_info_ephys.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_experiment_type_ephys)
        self.info_experiment_type_ephys = QtWidgets.QComboBox(self.ephys_info)
        self.info_experiment_type_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_type_ephys.setObjectName("info_experiment_type_ephys")
        self.info_experiment_type_ephys.addItem("")
        self.info_experiment_type_ephys.addItem("")
        self.experiment_info_ephys.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_experiment_type_ephys)
        self.label_cell_depth_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_cell_depth_ephys.setObjectName("label_cell_depth_ephys")
        self.experiment_info_ephys.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_cell_depth_ephys)
        self.info_cell_depth_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_cell_depth_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_depth_ephys.setObjectName("info_cell_depth_ephys")
        self.experiment_info_ephys.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_cell_depth_ephys)
        self.label_cell_region_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_cell_region_ephys.setObjectName("label_cell_region_ephys")
        self.experiment_info_ephys.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_cell_region_ephys)
        self.info_cell_region_ephys = QtWidgets.QComboBox(self.ephys_info)
        self.info_cell_region_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_region_ephys.setObjectName("info_cell_region_ephys")
        self.info_cell_region_ephys.addItem("")
        self.info_cell_region_ephys.addItem("")
        self.info_cell_region_ephys.addItem("")
        self.experiment_info_ephys.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_cell_region_ephys)
        self.label_isoflurane_percent_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_isoflurane_percent_ephys.setObjectName("label_isoflurane_percent_ephys")
        self.experiment_info_ephys.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_isoflurane_percent_ephys)
        self.info_isoflurane_percent_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_isoflurane_percent_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_isoflurane_percent_ephys.setObjectName("info_isoflurane_percent_ephys")
        self.experiment_info_ephys.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_isoflurane_percent_ephys)
        self.gridLayout_2.addLayout(self.experiment_info_ephys, 1, 0, 6, 1)
        self.recording_info_ephys = QtWidgets.QFormLayout()
        self.recording_info_ephys.setObjectName("recording_info_ephys")
        self.label_clamp_type_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_clamp_type_ephys.setObjectName("label_clamp_type_ephys")
        self.recording_info_ephys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_clamp_type_ephys)
        self.info_clamp_type_ephys = QtWidgets.QComboBox(self.ephys_info)
        self.info_clamp_type_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_clamp_type_ephys.setObjectName("info_clamp_type_ephys")
        self.info_clamp_type_ephys.addItem("")
        self.info_clamp_type_ephys.addItem("")
        self.recording_info_ephys.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_clamp_type_ephys)
        self.label_protocol_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_protocol_ephys.setObjectName("label_protocol_ephys")
        self.recording_info_ephys.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_protocol_ephys)
        self.info_protocol_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_protocol_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_protocol_ephys.setObjectName("info_protocol_ephys")
        self.recording_info_ephys.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_protocol_ephys)
        self.label_sampling_rate_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_sampling_rate_ephys.setObjectName("label_sampling_rate_ephys")
        self.recording_info_ephys.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_sampling_rate_ephys)
        self.info_sampling_rate_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_sampling_rate_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_sampling_rate_ephys.setObjectName("info_sampling_rate_ephys")
        self.recording_info_ephys.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_sampling_rate_ephys)
        self.gridLayout_2.addLayout(self.recording_info_ephys, 8, 2, 1, 1)
        self.label_experiment_info_ephys = QtWidgets.QLabel(self.ephys_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_experiment_info_ephys.setFont(font)
        self.label_experiment_info_ephys.setObjectName("label_experiment_info_ephys")
        self.gridLayout_2.addWidget(self.label_experiment_info_ephys, 0, 0, 1, 2)
        self.button_clear_selection_ephys = QtWidgets.QPushButton(self.ephys_info)
        self.button_clear_selection_ephys.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.button_clear_selection_ephys.setObjectName("button_clear_selection_ephys")
        self.gridLayout_2.addWidget(self.button_clear_selection_ephys, 17, 6, 1, 1)
        self.gridLayout_23 = QtWidgets.QGridLayout()
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.file_info_ephys = QtWidgets.QFormLayout()
        self.file_info_ephys.setObjectName("file_info_ephys")
        self.label_fname_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_fname_ephys.setObjectName("label_fname_ephys")
        self.file_info_ephys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_fname_ephys)
        self.info_fname_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_fname_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fname_ephys.setObjectName("info_fname_ephys")
        self.file_info_ephys.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_fname_ephys)
        self.gridLayout_23.addLayout(self.file_info_ephys, 0, 1, 1, 1)
        self.label_file_info_ephys = QtWidgets.QLabel(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_file_info_ephys.sizePolicy().hasHeightForWidth())
        self.label_file_info_ephys.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_file_info_ephys.setFont(font)
        self.label_file_info_ephys.setObjectName("label_file_info_ephys")
        self.gridLayout_23.addWidget(self.label_file_info_ephys, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_23, 10, 0, 1, 3)
        self.patch_info_ephys = QtWidgets.QFormLayout()
        self.patch_info_ephys.setObjectName("patch_info_ephys")
        self.label_4 = QtWidgets.QLabel(self.ephys_info)
        self.label_4.setObjectName("label_4")
        self.patch_info_ephys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.info_internal_solution_ephys = QtWidgets.QComboBox(self.ephys_info)
        self.info_internal_solution_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_internal_solution_ephys.setObjectName("info_internal_solution_ephys")
        self.info_internal_solution_ephys.addItem("")
        self.info_internal_solution_ephys.addItem("")
        self.info_internal_solution_ephys.addItem("")
        self.patch_info_ephys.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_internal_solution_ephys)
        self.info_pipette_resistance_start_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_pipette_resistance_start_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_pipette_resistance_start_ephys.setObjectName("info_pipette_resistance_start_ephys")
        self.patch_info_ephys.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_pipette_resistance_start_ephys)
        self.label_pipette_resistance_start_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_pipette_resistance_start_ephys.setObjectName("label_pipette_resistance_start_ephys")
        self.patch_info_ephys.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_pipette_resistance_start_ephys)
        self.label_seal_resistance_start_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_seal_resistance_start_ephys.setObjectName("label_seal_resistance_start_ephys")
        self.patch_info_ephys.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_seal_resistance_start_ephys)
        self.label_membrane_resistance_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_membrane_resistance_ephys.setObjectName("label_membrane_resistance_ephys")
        self.patch_info_ephys.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_membrane_resistance_ephys)
        self.label_capacitance_ephys = QtWidgets.QLabel(self.ephys_info)
        self.label_capacitance_ephys.setObjectName("label_capacitance_ephys")
        self.patch_info_ephys.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_capacitance_ephys)
        self.label_2 = QtWidgets.QLabel(self.ephys_info)
        self.label_2.setObjectName("label_2")
        self.patch_info_ephys.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.info_seal_resistance_start_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_seal_resistance_start_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_seal_resistance_start_ephys.setObjectName("info_seal_resistance_start_ephys")
        self.patch_info_ephys.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_seal_resistance_start_ephys)
        self.info_membrane_resistance_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_membrane_resistance_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_membrane_resistance_ephys.setObjectName("info_membrane_resistance_ephys")
        self.patch_info_ephys.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_membrane_resistance_ephys)
        self.info_membrane_capacitance_ephys = QtWidgets.QLineEdit(self.ephys_info)
        self.info_membrane_capacitance_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_membrane_capacitance_ephys.setObjectName("info_membrane_capacitance_ephys")
        self.patch_info_ephys.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_membrane_capacitance_ephys)
        self.info_patch_region_ephys = QtWidgets.QComboBox(self.ephys_info)
        self.info_patch_region_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_patch_region_ephys.setObjectName("info_patch_region_ephys")
        self.info_patch_region_ephys.addItem("")
        self.info_patch_region_ephys.addItem("")
        self.info_patch_region_ephys.addItem("")
        self.patch_info_ephys.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_patch_region_ephys)
        self.gridLayout_2.addLayout(self.patch_info_ephys, 1, 2, 6, 5)
        self.button_select_all_ephys = QtWidgets.QPushButton(self.ephys_info)
        self.button_select_all_ephys.setStyleSheet("background-color: rgb(255, 255, 0);")
        self.button_select_all_ephys.setObjectName("button_select_all_ephys")
        self.gridLayout_2.addWidget(self.button_select_all_ephys, 17, 3, 1, 3)
        self.label_recording_info_ephys = QtWidgets.QLabel(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_recording_info_ephys.sizePolicy().hasHeightForWidth())
        self.label_recording_info_ephys.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_recording_info_ephys.setFont(font)
        self.label_recording_info_ephys.setObjectName("label_recording_info_ephys")
        self.gridLayout_2.addWidget(self.label_recording_info_ephys, 7, 2, 1, 1)
        self.button_resize_columns_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_resize_columns_ephys.sizePolicy().hasHeightForWidth())
        self.button_resize_columns_ephys.setSizePolicy(sizePolicy)
        self.button_resize_columns_ephys.setStyleSheet("background-color: rgb(255, 85, 127);")
        self.button_resize_columns_ephys.setObjectName("button_resize_columns_ephys")
        self.gridLayout_2.addWidget(self.button_resize_columns_ephys, 17, 0, 1, 1)
        self.info_fnum_ephys = QtWidgets.QSpinBox(self.ephys_info)
        self.info_fnum_ephys.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fnum_ephys.setObjectName("info_fnum_ephys")
        self.gridLayout_2.addWidget(self.info_fnum_ephys, 10, 4, 1, 2)
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.ephys_info)
        self.textBrowser_3.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.gridLayout_2.addWidget(self.textBrowser_3, 8, 4, 1, 3)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.gridLayout_2.addLayout(self.verticalLayout_8, 3, 1, 1, 1)
        self.button_today_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_today_ephys.sizePolicy().hasHeightForWidth())
        self.button_today_ephys.setSizePolicy(sizePolicy)
        self.button_today_ephys.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_today_ephys.setObjectName("button_today_ephys")
        self.gridLayout_2.addWidget(self.button_today_ephys, 1, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.ephys_info)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 10, 3, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(20, 83, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem11, 4, 1, 1, 1)
        self.button_now_ephys = QtWidgets.QPushButton(self.ephys_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_now_ephys.sizePolicy().hasHeightForWidth())
        self.button_now_ephys.setSizePolicy(sizePolicy)
        self.button_now_ephys.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_ephys.setObjectName("button_now_ephys")
        self.gridLayout_2.addWidget(self.button_now_ephys, 2, 1, 1, 1)
        self.tabWidget.addTab(self.ephys_info, "")
        self.simultaneous_info = QtWidgets.QWidget()
        self.simultaneous_info.setObjectName("simultaneous_info")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.simultaneous_info)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.button_resize_columns_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_resize_columns_sim.sizePolicy().hasHeightForWidth())
        self.button_resize_columns_sim.setSizePolicy(sizePolicy)
        self.button_resize_columns_sim.setStyleSheet("background-color: rgb(255, 85, 127);")
        self.button_resize_columns_sim.setObjectName("button_resize_columns_sim")
        self.gridLayout_4.addWidget(self.button_resize_columns_sim, 23, 0, 1, 2)
        self.microscope_info_sim = QtWidgets.QFormLayout()
        self.microscope_info_sim.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.microscope_info_sim.setObjectName("microscope_info_sim")
        self.label_laser_power_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_laser_power_sim.setObjectName("label_laser_power_sim")
        self.microscope_info_sim.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_laser_power_sim)
        self.label_height_in_pixels_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_height_in_pixels_sim.setObjectName("label_height_in_pixels_sim")
        self.microscope_info_sim.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_height_in_pixels_sim)
        self.label_width_in_pixels_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_width_in_pixels_sim.setObjectName("label_width_in_pixels_sim")
        self.microscope_info_sim.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_width_in_pixels_sim)
        self.label_num_channels_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_num_channels_sim.setObjectName("label_num_channels_sim")
        self.microscope_info_sim.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_num_channels_sim)
        self.label_frame_rate_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_frame_rate_sim.setObjectName("label_frame_rate_sim")
        self.microscope_info_sim.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_frame_rate_sim)
        self.info_laser_power_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_laser_power_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_laser_power_sim.setObjectName("info_laser_power_sim")
        self.microscope_info_sim.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_laser_power_sim)
        self.info_height_in_pixels_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_height_in_pixels_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_height_in_pixels_sim.setObjectName("info_height_in_pixels_sim")
        self.microscope_info_sim.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_height_in_pixels_sim)
        self.info_width_in_pixels_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_width_in_pixels_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_width_in_pixels_sim.setObjectName("info_width_in_pixels_sim")
        self.microscope_info_sim.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_width_in_pixels_sim)
        self.info_num_channels_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_num_channels_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_num_channels_sim.setObjectName("info_num_channels_sim")
        self.microscope_info_sim.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_num_channels_sim)
        self.info_frame_rate_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_frame_rate_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_frame_rate_sim.setObjectName("info_frame_rate_sim")
        self.microscope_info_sim.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_frame_rate_sim)
        self.label_scan_method_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_scan_method_sim.setObjectName("label_scan_method_sim")
        self.microscope_info_sim.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_scan_method_sim)
        self.info_scan_method_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_scan_method_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_scan_method_sim.setObjectName("info_scan_method_sim")
        self.info_scan_method_sim.addItem("")
        self.info_scan_method_sim.addItem("")
        self.info_scan_method_sim.addItem("")
        self.info_scan_method_sim.addItem("")
        self.microscope_info_sim.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_scan_method_sim)
        self.label_indicator_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_indicator_sim.setObjectName("label_indicator_sim")
        self.microscope_info_sim.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_indicator_sim)
        self.info_indicator_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_indicator_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_indicator_sim.setObjectName("info_indicator_sim")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.info_indicator_sim.addItem("")
        self.microscope_info_sim.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.info_indicator_sim)
        self.gridLayout_4.addLayout(self.microscope_info_sim, 7, 0, 2, 1)
        self.label_patch_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_patch_info_sim.setFont(font)
        self.label_patch_info_sim.setStyleSheet("")
        self.label_patch_info_sim.setObjectName("label_patch_info_sim")
        self.gridLayout_4.addWidget(self.label_patch_info_sim, 0, 3, 1, 1)
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem12, 2, 2, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem13, 3, 0, 1, 1)
        self.drug_info_sim = QtWidgets.QFormLayout()
        self.drug_info_sim.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.drug_info_sim.setObjectName("drug_info_sim")
        self.label_drug_administered_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_drug_administered_sim.setObjectName("label_drug_administered_sim")
        self.drug_info_sim.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_drug_administered_sim)
        self.info_drug_administered_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_drug_administered_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_administered_sim.setObjectName("info_drug_administered_sim")
        self.drug_info_sim.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_drug_administered_sim)
        self.label_drug_concentration_micromolar_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_drug_concentration_micromolar_sim.setObjectName("label_drug_concentration_micromolar_sim")
        self.drug_info_sim.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_drug_concentration_micromolar_sim)
        self.info_drug_concentration_micromolar_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_drug_concentration_micromolar_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_concentration_micromolar_sim.setObjectName("info_drug_concentration_micromolar_sim")
        self.drug_info_sim.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_drug_concentration_micromolar_sim)
        self.label_drug_route_of_admin_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_drug_route_of_admin_sim.setObjectName("label_drug_route_of_admin_sim")
        self.drug_info_sim.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_drug_route_of_admin_sim)
        self.info_drug_route_of_admin_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_drug_route_of_admin_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_route_of_admin_sim.setObjectName("info_drug_route_of_admin_sim")
        self.drug_info_sim.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_drug_route_of_admin_sim)
        self.label_exposure_time_start_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_exposure_time_start_sim.setObjectName("label_exposure_time_start_sim")
        self.drug_info_sim.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_exposure_time_start_sim)
        self.info_drug_exposure_time_start_sim = QtWidgets.QTimeEdit(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_drug_exposure_time_start_sim.sizePolicy().hasHeightForWidth())
        self.info_drug_exposure_time_start_sim.setSizePolicy(sizePolicy)
        self.info_drug_exposure_time_start_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_drug_exposure_time_start_sim.setCalendarPopup(True)
        self.info_drug_exposure_time_start_sim.setObjectName("info_drug_exposure_time_start_sim")
        self.drug_info_sim.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_drug_exposure_time_start_sim)
        self.gridLayout_15.addLayout(self.drug_info_sim, 2, 0, 1, 1)
        self.button_now_drug_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_now_drug_sim.sizePolicy().hasHeightForWidth())
        self.button_now_drug_sim.setSizePolicy(sizePolicy)
        self.button_now_drug_sim.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.button_now_drug_sim.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_drug_sim.setObjectName("button_now_drug_sim")
        self.gridLayout_15.addWidget(self.button_now_drug_sim, 2, 1, 1, 1, QtCore.Qt.AlignBottom)
        self.label_drug_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_drug_info_sim.sizePolicy().hasHeightForWidth())
        self.label_drug_info_sim.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_drug_info_sim.setFont(font)
        self.label_drug_info_sim.setStyleSheet("")
        self.label_drug_info_sim.setObjectName("label_drug_info_sim")
        self.gridLayout_15.addWidget(self.label_drug_info_sim, 0, 0, 1, 3)
        self.gridLayout_4.addLayout(self.gridLayout_15, 7, 3, 1, 6)
        self.experiment_info_sim = QtWidgets.QFormLayout()
        self.experiment_info_sim.setObjectName("experiment_info_sim")
        self.label_experiment_date_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_experiment_date_sim.setObjectName("label_experiment_date_sim")
        self.experiment_info_sim.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_experiment_date_sim)
        self.info_experiment_date_sim = QtWidgets.QDateEdit(self.simultaneous_info)
        self.info_experiment_date_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_date_sim.setDateTime(QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0)))
        self.info_experiment_date_sim.setCalendarPopup(True)
        self.info_experiment_date_sim.setObjectName("info_experiment_date_sim")
        self.experiment_info_sim.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_experiment_date_sim)
        self.label_experiment_time_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_experiment_time_sim.setObjectName("label_experiment_time_sim")
        self.experiment_info_sim.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_experiment_time_sim)
        self.info_experiment_time_sim = QtWidgets.QTimeEdit(self.simultaneous_info)
        self.info_experiment_time_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_time_sim.setDateTime(QtCore.QDateTime(QtCore.QDate(2000, 1, 1), QtCore.QTime(9, 0, 0)))
        self.info_experiment_time_sim.setCalendarPopup(True)
        self.info_experiment_time_sim.setObjectName("info_experiment_time_sim")
        self.experiment_info_sim.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_experiment_time_sim)
        self.label_experiment_type_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_experiment_type_sim.setObjectName("label_experiment_type_sim")
        self.experiment_info_sim.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_experiment_type_sim)
        self.info_experiment_type_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_experiment_type_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_experiment_type_sim.setObjectName("info_experiment_type_sim")
        self.info_experiment_type_sim.addItem("")
        self.info_experiment_type_sim.addItem("")
        self.experiment_info_sim.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_experiment_type_sim)
        self.label_cell_depth_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_cell_depth_sim.setObjectName("label_cell_depth_sim")
        self.experiment_info_sim.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_cell_depth_sim)
        self.info_cell_depth_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_cell_depth_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_depth_sim.setObjectName("info_cell_depth_sim")
        self.experiment_info_sim.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_cell_depth_sim)
        self.label_cell_region_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_cell_region_sim.setObjectName("label_cell_region_sim")
        self.experiment_info_sim.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_cell_region_sim)
        self.info_cell_region_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_cell_region_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_region_sim.setObjectName("info_cell_region_sim")
        self.info_cell_region_sim.addItem("")
        self.info_cell_region_sim.addItem("")
        self.info_cell_region_sim.addItem("")
        self.experiment_info_sim.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_cell_region_sim)
        self.label_isoflurane_percent_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_isoflurane_percent_sim.setObjectName("label_isoflurane_percent_sim")
        self.experiment_info_sim.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_isoflurane_percent_sim)
        self.info_isoflurane_percent_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_isoflurane_percent_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_isoflurane_percent_sim.setObjectName("info_isoflurane_percent_sim")
        self.experiment_info_sim.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_isoflurane_percent_sim)
        self.gridLayout_4.addLayout(self.experiment_info_sim, 1, 0, 4, 2)
        self.button_new_pipette_sim = QtWidgets.QPushButton(self.simultaneous_info)
        self.button_new_pipette_sim.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.button_new_pipette_sim.setObjectName("button_new_pipette_sim")
        self.gridLayout_4.addWidget(self.button_new_pipette_sim, 0, 4, 1, 5)
        self.label_notes_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_notes_sim.setObjectName("label_notes_sim")
        self.gridLayout_4.addWidget(self.label_notes_sim, 15, 0, 1, 2)
        self.label_microscope_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_microscope_info_sim.sizePolicy().hasHeightForWidth())
        self.label_microscope_info_sim.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_microscope_info_sim.setFont(font)
        self.label_microscope_info_sim.setStyleSheet("")
        self.label_microscope_info_sim.setObjectName("label_microscope_info_sim")
        self.gridLayout_4.addWidget(self.label_microscope_info_sim, 5, 0, 1, 1)
        self.patch_info_sim = QtWidgets.QFormLayout()
        self.patch_info_sim.setObjectName("patch_info_sim")
        self.label_pipette_resistance_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_pipette_resistance_sim.setObjectName("label_pipette_resistance_sim")
        self.patch_info_sim.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_pipette_resistance_sim)
        self.info_pipette_resistance_start_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_pipette_resistance_start_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_pipette_resistance_start_sim.setObjectName("info_pipette_resistance_start_sim")
        self.patch_info_sim.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_pipette_resistance_start_sim)
        self.label_seal_resistance_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_seal_resistance_sim.setObjectName("label_seal_resistance_sim")
        self.patch_info_sim.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_seal_resistance_sim)
        self.info_seal_resistance_start_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_seal_resistance_start_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_seal_resistance_start_sim.setObjectName("info_seal_resistance_start_sim")
        self.patch_info_sim.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_seal_resistance_start_sim)
        self.label_membrane_resistance_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_membrane_resistance_sim.setObjectName("label_membrane_resistance_sim")
        self.patch_info_sim.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_membrane_resistance_sim)
        self.info_membrane_resistance_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_membrane_resistance_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_membrane_resistance_sim.setObjectName("info_membrane_resistance_sim")
        self.patch_info_sim.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_membrane_resistance_sim)
        self.label_capacitance_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_capacitance_sim.setObjectName("label_capacitance_sim")
        self.patch_info_sim.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_capacitance_sim)
        self.info_membrane_capacitance_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_membrane_capacitance_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_membrane_capacitance_sim.setObjectName("info_membrane_capacitance_sim")
        self.patch_info_sim.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_membrane_capacitance_sim)
        self.info_patch_region_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_patch_region_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_patch_region_sim.setObjectName("info_patch_region_sim")
        self.info_patch_region_sim.addItem("")
        self.info_patch_region_sim.addItem("")
        self.info_patch_region_sim.addItem("")
        self.patch_info_sim.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.info_patch_region_sim)
        self.label = QtWidgets.QLabel(self.simultaneous_info)
        self.label.setObjectName("label")
        self.patch_info_sim.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label)
        self.label_3 = QtWidgets.QLabel(self.simultaneous_info)
        self.label_3.setObjectName("label_3")
        self.patch_info_sim.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.info_internal_solution_sim = QtWidgets.QComboBox(self.simultaneous_info)
        self.info_internal_solution_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_internal_solution_sim.setObjectName("info_internal_solution_sim")
        self.info_internal_solution_sim.addItem("")
        self.info_internal_solution_sim.addItem("")
        self.info_internal_solution_sim.addItem("")
        self.patch_info_sim.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_internal_solution_sim)
        self.gridLayout_4.addLayout(self.patch_info_sim, 1, 3, 3, 6)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_2.sizePolicy().hasHeightForWidth())
        self.textBrowser_2.setSizePolicy(sizePolicy)
        self.textBrowser_2.setMinimumSize(QtCore.QSize(10, 0))
        self.textBrowser_2.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.textBrowser_2.setFrameShape(QtWidgets.QFrame.Box)
        self.textBrowser_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textBrowser_2.setLineWidth(2)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.gridLayout_4.addWidget(self.textBrowser_2, 4, 6, 2, 3)
        self.file_info_sim = QtWidgets.QGridLayout()
        self.file_info_sim.setObjectName("file_info_sim")
        self.label_9 = QtWidgets.QLabel(self.simultaneous_info)
        self.label_9.setObjectName("label_9")
        self.file_info_sim.addWidget(self.label_9, 1, 2, 1, 1)
        self.info_fname_ephys_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_fname_ephys_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fname_ephys_sim.setObjectName("info_fname_ephys_sim")
        self.file_info_sim.addWidget(self.info_fname_ephys_sim, 1, 1, 1, 1)
        self.label_fname_ehys_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_fname_ehys_sim.setObjectName("label_fname_ehys_sim")
        self.file_info_sim.addWidget(self.label_fname_ehys_sim, 1, 0, 1, 1)
        self.label_fname_imaging_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_fname_imaging_sim.setObjectName("label_fname_imaging_sim")
        self.file_info_sim.addWidget(self.label_fname_imaging_sim, 0, 0, 1, 1)
        self.info_fname_imaging_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_fname_imaging_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fname_imaging_sim.setObjectName("info_fname_imaging_sim")
        self.file_info_sim.addWidget(self.info_fname_imaging_sim, 0, 1, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.simultaneous_info)
        self.label_8.setObjectName("label_8")
        self.file_info_sim.addWidget(self.label_8, 0, 2, 1, 1)
        self.info_fnum_imaging_sim = QtWidgets.QSpinBox(self.simultaneous_info)
        self.info_fnum_imaging_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fnum_imaging_sim.setObjectName("info_fnum_imaging_sim")
        self.file_info_sim.addWidget(self.info_fnum_imaging_sim, 0, 3, 1, 1)
        self.info_fnum_ephys_sim = QtWidgets.QSpinBox(self.simultaneous_info)
        self.info_fnum_ephys_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_fnum_ephys_sim.setObjectName("info_fnum_ephys_sim")
        self.file_info_sim.addWidget(self.info_fnum_ephys_sim, 1, 3, 1, 1)
        self.gridLayout_4.addLayout(self.file_info_sim, 14, 1, 1, 8)
        self.button_now_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_now_sim.sizePolicy().hasHeightForWidth())
        self.button_now_sim.setSizePolicy(sizePolicy)
        self.button_now_sim.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_now_sim.setObjectName("button_now_sim")
        self.gridLayout_4.addWidget(self.button_now_sim, 2, 2, 1, 1)
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.label_recording_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_recording_info_sim.sizePolicy().hasHeightForWidth())
        self.label_recording_info_sim.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_recording_info_sim.setFont(font)
        self.label_recording_info_sim.setObjectName("label_recording_info_sim")
        self.gridLayout_13.addWidget(self.label_recording_info_sim, 0, 0, 1, 1)
        self.recording_info_sim = QtWidgets.QFormLayout()
        self.recording_info_sim.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.recording_info_sim.setObjectName("recording_info_sim")
        self.label_clamp_type_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_clamp_type_sim.setObjectName("label_clamp_type_sim")
        self.recording_info_sim.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_clamp_type_sim)
        self.info_clamp_type_sim = QtWidgets.QComboBox(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_clamp_type_sim.sizePolicy().hasHeightForWidth())
        self.info_clamp_type_sim.setSizePolicy(sizePolicy)
        self.info_clamp_type_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_clamp_type_sim.setObjectName("info_clamp_type_sim")
        self.info_clamp_type_sim.addItem("")
        self.info_clamp_type_sim.addItem("")
        self.recording_info_sim.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_clamp_type_sim)
        self.label_protocol_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_protocol_sim.setObjectName("label_protocol_sim")
        self.recording_info_sim.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_protocol_sim)
        self.info_protocol_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_protocol_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_protocol_sim.setObjectName("info_protocol_sim")
        self.recording_info_sim.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_protocol_sim)
        self.label_sampling_rate_sim = QtWidgets.QLabel(self.simultaneous_info)
        self.label_sampling_rate_sim.setObjectName("label_sampling_rate_sim")
        self.recording_info_sim.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_sampling_rate_sim)
        self.info_sampling_rate_sim = QtWidgets.QLineEdit(self.simultaneous_info)
        self.info_sampling_rate_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_sampling_rate_sim.setObjectName("info_sampling_rate_sim")
        self.recording_info_sim.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_sampling_rate_sim)
        self.gridLayout_13.addLayout(self.recording_info_sim, 1, 0, 1, 1)
        self.gridLayout_4.addLayout(self.gridLayout_13, 4, 3, 2, 3)
        self.table_data_sim = QtWidgets.QTableWidget(self.simultaneous_info)
        self.table_data_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.table_data_sim.setObjectName("table_data_sim")
        self.table_data_sim.setColumnCount(30)
        self.table_data_sim.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(25, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(26, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(27, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(28, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_data_sim.setHorizontalHeaderItem(29, item)
        self.gridLayout_4.addWidget(self.table_data_sim, 22, 0, 1, 9)
        self.label_file_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_file_info_sim.sizePolicy().hasHeightForWidth())
        self.label_file_info_sim.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_file_info_sim.setFont(font)
        self.label_file_info_sim.setStyleSheet("")
        self.label_file_info_sim.setObjectName("label_file_info_sim")
        self.gridLayout_4.addWidget(self.label_file_info_sim, 13, 0, 2, 1)
        self.button_select_all_sim = QtWidgets.QPushButton(self.simultaneous_info)
        self.button_select_all_sim.setStyleSheet("background-color: rgb(255, 255, 0);")
        self.button_select_all_sim.setObjectName("button_select_all_sim")
        self.gridLayout_4.addWidget(self.button_select_all_sim, 23, 4, 1, 3)
        self.label_experiment_info_sim = QtWidgets.QLabel(self.simultaneous_info)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_experiment_info_sim.setFont(font)
        self.label_experiment_info_sim.setStyleSheet("")
        self.label_experiment_info_sim.setObjectName("label_experiment_info_sim")
        self.gridLayout_4.addWidget(self.label_experiment_info_sim, 0, 0, 1, 3)
        self.button_today_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_today_sim.sizePolicy().hasHeightForWidth())
        self.button_today_sim.setSizePolicy(sizePolicy)
        self.button_today_sim.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.button_today_sim.setObjectName("button_today_sim")
        self.gridLayout_4.addWidget(self.button_today_sim, 1, 2, 1, 1)
        self.button_clear_selection_sim = QtWidgets.QPushButton(self.simultaneous_info)
        self.button_clear_selection_sim.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.button_clear_selection_sim.setObjectName("button_clear_selection_sim")
        self.gridLayout_4.addWidget(self.button_clear_selection_sim, 23, 7, 1, 2)
        self.button_append_info_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_append_info_sim.sizePolicy().hasHeightForWidth())
        self.button_append_info_sim.setSizePolicy(sizePolicy)
        self.button_append_info_sim.setStyleSheet("background-color: rgb(85, 180, 200);")
        self.button_append_info_sim.setObjectName("button_append_info_sim")
        self.gridLayout_4.addWidget(self.button_append_info_sim, 18, 8, 1, 1)
        self.button_export_notes_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_export_notes_sim.sizePolicy().hasHeightForWidth())
        self.button_export_notes_sim.setSizePolicy(sizePolicy)
        self.button_export_notes_sim.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.button_export_notes_sim.setObjectName("button_export_notes_sim")
        self.gridLayout_4.addWidget(self.button_export_notes_sim, 19, 8, 1, 1)
        self.button_export_to_csv_sim = QtWidgets.QPushButton(self.simultaneous_info)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_export_to_csv_sim.sizePolicy().hasHeightForWidth())
        self.button_export_to_csv_sim.setSizePolicy(sizePolicy)
        self.button_export_to_csv_sim.setStyleSheet("background-color: rgb(0, 255, 127);")
        self.button_export_to_csv_sim.setObjectName("button_export_to_csv_sim")
        self.gridLayout_4.addWidget(self.button_export_to_csv_sim, 20, 8, 1, 1)
        self.info_notes_sim = QtWidgets.QTextEdit(self.simultaneous_info)
        self.info_notes_sim.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_notes_sim.setObjectName("info_notes_sim")
        self.gridLayout_4.addWidget(self.info_notes_sim, 16, 0, 6, 8)
        self.tabWidget.addTab(self.simultaneous_info, "")
        self.pipette_calculator = QtWidgets.QWidget()
        self.pipette_calculator.setObjectName("pipette_calculator")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.pipette_calculator)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.button_clear_pipette_calculator = QtWidgets.QPushButton(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_clear_pipette_calculator.sizePolicy().hasHeightForWidth())
        self.button_clear_pipette_calculator.setSizePolicy(sizePolicy)
        self.button_clear_pipette_calculator.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.button_clear_pipette_calculator.setObjectName("button_clear_pipette_calculator")
        self.gridLayout_12.addWidget(self.button_clear_pipette_calculator, 2, 0, 1, 1)
        self.button_pipette_calculate = QtWidgets.QPushButton(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_pipette_calculate.sizePolicy().hasHeightForWidth())
        self.button_pipette_calculate.setSizePolicy(sizePolicy)
        self.button_pipette_calculate.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.button_pipette_calculate.setObjectName("button_pipette_calculate")
        self.gridLayout_12.addWidget(self.button_pipette_calculate, 2, 3, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem14, 2, 2, 1, 1)
        self.start_locs_calc = QtWidgets.QFormLayout()
        self.start_locs_calc.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.start_locs_calc.setObjectName("start_locs_calc")
        self.label_manipulator_angle_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_manipulator_angle_calc.setObjectName("label_manipulator_angle_calc")
        self.start_locs_calc.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_manipulator_angle_calc)
        self.info_manipulator_angle_calc = QtWidgets.QLineEdit(self.pipette_calculator)
        self.info_manipulator_angle_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_manipulator_angle_calc.setObjectName("info_manipulator_angle_calc")
        self.start_locs_calc.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_manipulator_angle_calc)
        self.label_cell_depth_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_cell_depth_calc.setObjectName("label_cell_depth_calc")
        self.start_locs_calc.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_cell_depth_calc)
        self.info_cell_dept_calc = QtWidgets.QLineEdit(self.pipette_calculator)
        self.info_cell_dept_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_cell_dept_calc.setObjectName("info_cell_dept_calc")
        self.start_locs_calc.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_cell_dept_calc)
        self.label_cell_glass_distance_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_cell_glass_distance_calc.setObjectName("label_cell_glass_distance_calc")
        self.start_locs_calc.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_cell_glass_distance_calc)
        self.info_glass_distance_calc = QtWidgets.QLineEdit(self.pipette_calculator)
        self.info_glass_distance_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_glass_distance_calc.setObjectName("info_glass_distance_calc")
        self.start_locs_calc.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_glass_distance_calc)
        self.label_manipulator_x_start_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_manipulator_x_start_calc.setObjectName("label_manipulator_x_start_calc")
        self.start_locs_calc.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_manipulator_x_start_calc)
        self.info_x_start_calc = QtWidgets.QLineEdit(self.pipette_calculator)
        self.info_x_start_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_x_start_calc.setObjectName("info_x_start_calc")
        self.start_locs_calc.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_x_start_calc)
        self.label_manipulator_z_start_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_manipulator_z_start_calc.setObjectName("label_manipulator_z_start_calc")
        self.start_locs_calc.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_manipulator_z_start_calc)
        self.info_z_start_calc = QtWidgets.QLineEdit(self.pipette_calculator)
        self.info_z_start_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_z_start_calc.setObjectName("info_z_start_calc")
        self.start_locs_calc.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.info_z_start_calc)
        self.gridLayout_12.addLayout(self.start_locs_calc, 1, 0, 1, 2)
        self.label_start_info = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_start_info.sizePolicy().hasHeightForWidth())
        self.label_start_info.setSizePolicy(sizePolicy)
        self.label_start_info.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_start_info.setFont(font)
        self.label_start_info.setObjectName("label_start_info")
        self.gridLayout_12.addWidget(self.label_start_info, 0, 0, 1, 2)
        self.target_locs_calc = QtWidgets.QFormLayout()
        self.target_locs_calc.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.target_locs_calc.setHorizontalSpacing(5)
        self.target_locs_calc.setVerticalSpacing(9)
        self.target_locs_calc.setObjectName("target_locs_calc")
        self.label_entry_dist_from_cell_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_entry_dist_from_cell_calc.setObjectName("label_entry_dist_from_cell_calc")
        self.target_locs_calc.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_entry_dist_from_cell_calc)
        self.info_entry_dist_from_cell_calc = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_entry_dist_from_cell_calc.sizePolicy().hasHeightForWidth())
        self.info_entry_dist_from_cell_calc.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.info_entry_dist_from_cell_calc.setFont(font)
        self.info_entry_dist_from_cell_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_entry_dist_from_cell_calc.setFrameShape(QtWidgets.QFrame.Box)
        self.info_entry_dist_from_cell_calc.setFrameShadow(QtWidgets.QFrame.Plain)
        self.info_entry_dist_from_cell_calc.setLineWidth(2)
        self.info_entry_dist_from_cell_calc.setTextFormat(QtCore.Qt.PlainText)
        self.info_entry_dist_from_cell_calc.setAlignment(QtCore.Qt.AlignCenter)
        self.info_entry_dist_from_cell_calc.setObjectName("info_entry_dist_from_cell_calc")
        self.target_locs_calc.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.info_entry_dist_from_cell_calc)
        self.label_entry_dist_from_glass_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_entry_dist_from_glass_calc.setObjectName("label_entry_dist_from_glass_calc")
        self.target_locs_calc.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_entry_dist_from_glass_calc)
        self.info_entry_dist_from_glass_calc = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_entry_dist_from_glass_calc.sizePolicy().hasHeightForWidth())
        self.info_entry_dist_from_glass_calc.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.info_entry_dist_from_glass_calc.setFont(font)
        self.info_entry_dist_from_glass_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_entry_dist_from_glass_calc.setFrameShape(QtWidgets.QFrame.Box)
        self.info_entry_dist_from_glass_calc.setLineWidth(2)
        self.info_entry_dist_from_glass_calc.setAlignment(QtCore.Qt.AlignCenter)
        self.info_entry_dist_from_glass_calc.setObjectName("info_entry_dist_from_glass_calc")
        self.target_locs_calc.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.info_entry_dist_from_glass_calc)
        self.label_x_tar_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_x_tar_calc.setObjectName("label_x_tar_calc")
        self.target_locs_calc.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_x_tar_calc)
        self.info_x_tar_calc = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_x_tar_calc.sizePolicy().hasHeightForWidth())
        self.info_x_tar_calc.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.info_x_tar_calc.setFont(font)
        self.info_x_tar_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_x_tar_calc.setFrameShape(QtWidgets.QFrame.Box)
        self.info_x_tar_calc.setLineWidth(2)
        self.info_x_tar_calc.setAlignment(QtCore.Qt.AlignCenter)
        self.info_x_tar_calc.setObjectName("info_x_tar_calc")
        self.target_locs_calc.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.info_x_tar_calc)
        self.label_z_tar_calc = QtWidgets.QLabel(self.pipette_calculator)
        self.label_z_tar_calc.setObjectName("label_z_tar_calc")
        self.target_locs_calc.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_z_tar_calc)
        self.info_z_tar_calc = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.info_z_tar_calc.sizePolicy().hasHeightForWidth())
        self.info_z_tar_calc.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.info_z_tar_calc.setFont(font)
        self.info_z_tar_calc.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.info_z_tar_calc.setFrameShape(QtWidgets.QFrame.Box)
        self.info_z_tar_calc.setLineWidth(2)
        self.info_z_tar_calc.setAlignment(QtCore.Qt.AlignCenter)
        self.info_z_tar_calc.setObjectName("info_z_tar_calc")
        self.target_locs_calc.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.info_z_tar_calc)
        self.gridLayout_12.addLayout(self.target_locs_calc, 1, 3, 1, 1)
        self.label_target_locs = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_target_locs.sizePolicy().hasHeightForWidth())
        self.label_target_locs.setSizePolicy(sizePolicy)
        self.label_target_locs.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_target_locs.setFont(font)
        self.label_target_locs.setObjectName("label_target_locs")
        self.gridLayout_12.addWidget(self.label_target_locs, 0, 3, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem15, 1, 2, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_12, 0, 0, 1, 1)
        self.gridLayout_24 = QtWidgets.QGridLayout()
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.textBrowser = QtWidgets.QTextBrowser(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setMinimumSize(QtCore.QSize(0, 20))
        self.textBrowser.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout_24.addWidget(self.textBrowser, 0, 1, 1, 1)
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.pipette_calculator)
        self.textBrowser_4.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.gridLayout_24.addWidget(self.textBrowser_4, 0, 2, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_24.addItem(spacerItem16, 1, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.pipette_calculator)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMaximumSize(QtCore.QSize(16777215, 500))
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_24.addWidget(self.label_6, 0, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_24, 1, 0, 1, 1)
        self.tabWidget.addTab(self.pipette_calculator, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label_7 = QtWidgets.QLabel(self.tab)
        self.label_7.setGeometry(QtCore.QRect(55, 45, 691, 801))
        self.label_7.setObjectName("label_7")
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        ExperimentTracker.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(ExperimentTracker)
        self.statusbar.setObjectName("statusbar")
        ExperimentTracker.setStatusBar(self.statusbar)
        self.label_notes.setBuddy(self.animal_notes)
        self.label_dob.setBuddy(self.animal_dob)
        self.label_species.setBuddy(self.animal_species)
        self.label_strain.setBuddy(self.animal_strain)
        self.label_sex.setBuddy(self.animal_sex)
        self.label_cage_num.setBuddy(self.animal_cage_number)
        self.label_animal_id.setBuddy(self.animal_id)
        self.label_sx_date.setBuddy(self.surgery_date)
        self.label_start_time.setBuddy(self.surgery_start_time)
        self.label_5.setBuddy(self.animal_brain_region)
        self.label_drug_administered_imaging.setBuddy(self.info_drug_administered_imaging)
        self.label_drug_concentration_imaging.setBuddy(self.info_drug_concentration_micromolar_imaging)
        self.label_drug_route_of_admin_imaging.setBuddy(self.info_drug_route_of_admin_imaging)
        self.label_drug_exposure_time_start_imaging.setBuddy(self.info_drug_exposure_time_start_imaging)
        self.label_fname_imaging.setBuddy(self.info_fname_imaging)
        self.label_notes_imaging.setBuddy(self.info_experiment_notes_imaging)
        self.label_experiment_date_imaging.setBuddy(self.info_experiment_date_imaging)
        self.label_experiment_time_imaging.setBuddy(self.info_experiment_time_imaging)
        self.label_experiment_type_imaging.setBuddy(self.info_experiment_type_imaging)
        self.label_cell_depth_imaging.setBuddy(self.info_cell_depth_imaging)
        self.label_cell_region_imaging.setBuddy(self.info_cell_region_imaging)
        self.label_isoflurane_percent_imaging.setBuddy(self.info_isoflurane_percent_imaging)
        self.label_laser_power_imaging.setBuddy(self.info_laser_power_imaging)
        self.label_height_in_pixels_imaging.setBuddy(self.info_height_in_pixels_imaging)
        self.label_width_in_pixels_imaging.setBuddy(self.info_width_in_pixels_imaging)
        self.label_num_channels_imaging.setBuddy(self.info_num_channels_imaging)
        self.label_frame_rate_imaging.setBuddy(self.info_frame_rate_imaging)
        self.label_scan_method_imaging.setBuddy(self.info_scan_method_imaging)
        self.label_indicator_imaging.setBuddy(self.info_indicator_imaging)
        self.label_notes_ephys.setBuddy(self.info_notes_ephys)
        self.label_drug_administered_ephys.setBuddy(self.info_drug_administered_ephys)
        self.label_drug_concentration_micromolar_ephys.setBuddy(self.info_drug_concentration_micromolar_ephys)
        self.label_drug_route_of_admin_ephys.setBuddy(self.info_drug_route_of_admin_ephys)
        self.label_drug_exposure_time_start_ephys.setBuddy(self.info_drug_exposure_time_start_ephys)
        self.label_experiment_date_ephys.setBuddy(self.info_experiment_date_ephys)
        self.label_experiment_time_ephys.setBuddy(self.info_experiment_time_ephys)
        self.label_experiment_type_ephys.setBuddy(self.info_experiment_type_ephys)
        self.label_cell_depth_ephys.setBuddy(self.info_cell_depth_ephys)
        self.label_cell_region_ephys.setBuddy(self.info_cell_region_ephys)
        self.label_isoflurane_percent_ephys.setBuddy(self.info_isoflurane_percent_ephys)
        self.label_clamp_type_ephys.setBuddy(self.info_clamp_type_ephys)
        self.label_protocol_ephys.setBuddy(self.info_protocol_ephys)
        self.label_sampling_rate_ephys.setBuddy(self.info_sampling_rate_ephys)
        self.label_fname_ephys.setBuddy(self.info_fname_ephys)
        self.label_4.setBuddy(self.info_internal_solution_ephys)
        self.label_pipette_resistance_start_ephys.setBuddy(self.info_pipette_resistance_start_ephys)
        self.label_seal_resistance_start_ephys.setBuddy(self.info_seal_resistance_start_ephys)
        self.label_membrane_resistance_ephys.setBuddy(self.info_membrane_resistance_ephys)
        self.label_capacitance_ephys.setBuddy(self.info_membrane_capacitance_ephys)
        self.label_2.setBuddy(self.info_patch_region_ephys)
        self.label_laser_power_sim.setBuddy(self.info_laser_power_sim)
        self.label_height_in_pixels_sim.setBuddy(self.info_height_in_pixels_sim)
        self.label_width_in_pixels_sim.setBuddy(self.info_width_in_pixels_sim)
        self.label_num_channels_sim.setBuddy(self.info_num_channels_sim)
        self.label_frame_rate_sim.setBuddy(self.info_frame_rate_sim)
        self.label_scan_method_sim.setBuddy(self.info_scan_method_sim)
        self.label_indicator_sim.setBuddy(self.info_indicator_sim)
        self.label_drug_administered_sim.setBuddy(self.info_drug_administered_sim)
        self.label_drug_concentration_micromolar_sim.setBuddy(self.info_drug_concentration_micromolar_sim)
        self.label_drug_route_of_admin_sim.setBuddy(self.info_drug_route_of_admin_sim)
        self.label_exposure_time_start_sim.setBuddy(self.info_drug_exposure_time_start_sim)
        self.label_experiment_date_sim.setBuddy(self.info_experiment_date_sim)
        self.label_experiment_time_sim.setBuddy(self.info_experiment_time_sim)
        self.label_experiment_type_sim.setBuddy(self.info_experiment_type_sim)
        self.label_cell_depth_sim.setBuddy(self.info_cell_depth_sim)
        self.label_cell_region_sim.setBuddy(self.info_cell_region_sim)
        self.label_isoflurane_percent_sim.setBuddy(self.info_isoflurane_percent_sim)
        self.label_notes_sim.setBuddy(self.info_notes_sim)
        self.label_pipette_resistance_sim.setBuddy(self.info_pipette_resistance_start_sim)
        self.label_seal_resistance_sim.setBuddy(self.info_seal_resistance_start_sim)
        self.label_membrane_resistance_sim.setBuddy(self.info_membrane_resistance_sim)
        self.label_capacitance_sim.setBuddy(self.info_membrane_capacitance_sim)
        self.label.setBuddy(self.info_patch_region_sim)
        self.label_3.setBuddy(self.info_internal_solution_sim)
        self.label_fname_ehys_sim.setBuddy(self.info_fname_ephys_sim)
        self.label_fname_imaging_sim.setBuddy(self.info_fname_imaging_sim)
        self.label_manipulator_angle_calc.setBuddy(self.info_manipulator_angle_calc)
        self.label_cell_depth_calc.setBuddy(self.info_cell_dept_calc)
        self.label_cell_glass_distance_calc.setBuddy(self.info_glass_distance_calc)
        self.label_manipulator_x_start_calc.setBuddy(self.info_x_start_calc)

        self.retranslateUi(ExperimentTracker)
        self.tabWidget.setCurrentIndex(0)
        self.button_new_pipette_sim.clicked.connect(self.info_pipette_resistance_start_sim.clear)
        self.button_new_pipette_sim.clicked.connect(self.info_seal_resistance_start_sim.clear)
        self.button_new_pipette_sim.clicked.connect(self.info_membrane_resistance_sim.clear)
        self.button_new_pipette_sim.clicked.connect(self.info_membrane_capacitance_sim.clear)
        self.button_new_pipette_ephys.clicked.connect(self.info_pipette_resistance_start_ephys.clear)
        self.button_new_pipette_ephys.clicked.connect(self.info_seal_resistance_start_ephys.clear)
        self.button_new_pipette_ephys.clicked.connect(self.info_membrane_resistance_ephys.clear)
        self.button_new_pipette_ephys.clicked.connect(self.info_membrane_capacitance_ephys.clear)
        self.button_select_all_notes_animal_info.clicked.connect(self.animal_notes.selectAll)
        self.button_copy_animal_info.clicked.connect(self.animal_notes.copy)
        self.button_select_all_imaging.clicked.connect(self.table_data_imaging.selectAll)
        self.button_resize_columns_ephys.clicked.connect(self.table_data_ephys.resizeColumnsToContents)
        self.button_resize_columns_imaging.clicked.connect(self.table_data_imaging.resizeColumnsToContents)
        self.button_select_all_ephys.clicked.connect(self.table_data_ephys.selectAll)
        self.button_clear_pipette_calculator.clicked.connect(self.info_z_start_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_x_start_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_glass_distance_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_cell_dept_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_manipulator_angle_calc.clear)
        self.button_pipette_calculate.clicked.connect(lambda checked: Ui_ExperimentTracker.calculatePipetteEntry(self))
        self.button_today_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.todayClick(self, sender="sim"))
        self.button_now_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="sim"))
        self.button_now_drug_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="sim drug"))
        self.button_append_info_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.appendInfo(self, sender="sim"))
        self.button_export_notes_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.exportNotes(self, sender="sim", MainWindow=ExperimentTracker))
        self.button_export_to_csv_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.exportInfo(self, sender="sim", MainWindow=ExperimentTracker))
        self.button_today_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.todayClick(self, sender="ephys"))
        self.button_now_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="ephys"))
        self.button_export_notes_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.exportNotes(self, sender="ephys", MainWindow=ExperimentTracker))
        self.button_append_info_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.appendInfo(self, sender="ephys"))
        self.button_export_to_csv_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.exportInfo(self, sender="ephys", MainWindow=ExperimentTracker))
        self.button_today_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.todayClick(self, sender="imaging"))
        self.button_now_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="imaging"))
        self.button_export_notes_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.exportNotes(self, sender="imaging", MainWindow=ExperimentTracker))
        self.button_append_info_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.appendInfo(self, sender="imaging"))
        self.button_export_to_csv_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.exportInfo(self, sender="imaging", MainWindow=ExperimentTracker))
        self.animal_export_notes.clicked.connect(lambda checked: Ui_ExperimentTracker.exportNotes(self, sender="animal", MainWindow=ExperimentTracker))
        self.animal_export_csv.clicked.connect(lambda checked: Ui_ExperimentTracker.exportInfo(self, sender="animal", MainWindow=ExperimentTracker))
        self.button_now_drug_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="imaging drug"))
        self.button_resize_columns_sim.clicked.connect(self.table_data_sim.resizeColumnsToContents)
        self.button_select_all_sim.clicked.connect(self.table_data_sim.selectAll)
        self.button_clear_animal_info.clicked.connect(self.animal_notes.clear)
        self.button_now_drug_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="ephys drug"))
        self.button_clear_pipette_calculator.clicked.connect(self.info_x_tar_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_entry_dist_from_cell_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_z_tar_calc.clear)
        self.button_clear_pipette_calculator.clicked.connect(self.info_entry_dist_from_glass_calc.clear)
        self.button_clear_selection_imaging.clicked.connect(lambda checked: Ui_ExperimentTracker.delete_selected_rows(self, sender="imaging", MainWindow=ExperimentTracker))
        self.button_clear_selection_ephys.clicked.connect(lambda checked: Ui_ExperimentTracker.delete_selected_rows(self, sender="ephys", MainWindow=ExperimentTracker))
        self.button_clear_selection_sim.clicked.connect(lambda checked: Ui_ExperimentTracker.delete_selected_rows(self, sender="sim", MainWindow=ExperimentTracker))
        self.animal_info_now_time_button.clicked.connect(lambda checked: Ui_ExperimentTracker.nowClick(self, sender="animal"))
        self.animal_info_today_button.clicked.connect(lambda checked: Ui_ExperimentTracker.todayClick(self, sender="animal"))
        QtCore.QMetaObject.connectSlotsByName(ExperimentTracker)
        ExperimentTracker.setTabOrder(self.animal_dob, self.animal_species)
        ExperimentTracker.setTabOrder(self.animal_species, self.animal_strain)
        ExperimentTracker.setTabOrder(self.animal_strain, self.animal_sex)
        ExperimentTracker.setTabOrder(self.animal_sex, self.animal_cage_number)
        ExperimentTracker.setTabOrder(self.animal_cage_number, self.animal_id)
        ExperimentTracker.setTabOrder(self.animal_id, self.surgery_date)
        ExperimentTracker.setTabOrder(self.surgery_date, self.surgery_start_time)
        ExperimentTracker.setTabOrder(self.surgery_start_time, self.animal_notes)
        ExperimentTracker.setTabOrder(self.animal_notes, self.info_experiment_date_imaging)
        ExperimentTracker.setTabOrder(self.info_experiment_date_imaging, self.info_experiment_time_imaging)
        ExperimentTracker.setTabOrder(self.info_experiment_time_imaging, self.info_experiment_type_imaging)
        ExperimentTracker.setTabOrder(self.info_experiment_type_imaging, self.info_cell_depth_imaging)
        ExperimentTracker.setTabOrder(self.info_cell_depth_imaging, self.info_cell_region_imaging)
        ExperimentTracker.setTabOrder(self.info_cell_region_imaging, self.info_isoflurane_percent_imaging)
        ExperimentTracker.setTabOrder(self.info_isoflurane_percent_imaging, self.info_drug_administered_imaging)
        ExperimentTracker.setTabOrder(self.info_drug_administered_imaging, self.info_drug_concentration_micromolar_imaging)
        ExperimentTracker.setTabOrder(self.info_drug_concentration_micromolar_imaging, self.info_drug_route_of_admin_imaging)
        ExperimentTracker.setTabOrder(self.info_drug_route_of_admin_imaging, self.info_drug_exposure_time_start_imaging)
        ExperimentTracker.setTabOrder(self.info_drug_exposure_time_start_imaging, self.info_laser_power_imaging)
        ExperimentTracker.setTabOrder(self.info_laser_power_imaging, self.info_height_in_pixels_imaging)
        ExperimentTracker.setTabOrder(self.info_height_in_pixels_imaging, self.info_width_in_pixels_imaging)
        ExperimentTracker.setTabOrder(self.info_width_in_pixels_imaging, self.info_num_channels_imaging)
        ExperimentTracker.setTabOrder(self.info_num_channels_imaging, self.info_frame_rate_imaging)
        ExperimentTracker.setTabOrder(self.info_frame_rate_imaging, self.info_scan_method_imaging)
        ExperimentTracker.setTabOrder(self.info_scan_method_imaging, self.info_indicator_imaging)
        ExperimentTracker.setTabOrder(self.info_indicator_imaging, self.info_fname_imaging)
        ExperimentTracker.setTabOrder(self.info_fname_imaging, self.table_data_imaging)
        ExperimentTracker.setTabOrder(self.table_data_imaging, self.info_experiment_date_ephys)
        ExperimentTracker.setTabOrder(self.info_experiment_date_ephys, self.info_experiment_time_ephys)
        ExperimentTracker.setTabOrder(self.info_experiment_time_ephys, self.info_experiment_type_ephys)
        ExperimentTracker.setTabOrder(self.info_experiment_type_ephys, self.info_cell_depth_ephys)
        ExperimentTracker.setTabOrder(self.info_cell_depth_ephys, self.info_cell_region_ephys)
        ExperimentTracker.setTabOrder(self.info_cell_region_ephys, self.info_isoflurane_percent_ephys)
        ExperimentTracker.setTabOrder(self.info_isoflurane_percent_ephys, self.info_drug_administered_ephys)
        ExperimentTracker.setTabOrder(self.info_drug_administered_ephys, self.info_drug_concentration_micromolar_ephys)
        ExperimentTracker.setTabOrder(self.info_drug_concentration_micromolar_ephys, self.info_drug_route_of_admin_ephys)
        ExperimentTracker.setTabOrder(self.info_drug_route_of_admin_ephys, self.info_drug_exposure_time_start_ephys)
        ExperimentTracker.setTabOrder(self.info_drug_exposure_time_start_ephys, self.info_clamp_type_ephys)
        ExperimentTracker.setTabOrder(self.info_clamp_type_ephys, self.info_protocol_ephys)
        ExperimentTracker.setTabOrder(self.info_protocol_ephys, self.info_sampling_rate_ephys)
        ExperimentTracker.setTabOrder(self.info_sampling_rate_ephys, self.info_fname_ephys)
        ExperimentTracker.setTabOrder(self.info_fname_ephys, self.button_new_pipette_ephys)
        ExperimentTracker.setTabOrder(self.button_new_pipette_ephys, self.table_data_ephys)
        ExperimentTracker.setTabOrder(self.table_data_ephys, self.info_experiment_date_sim)
        ExperimentTracker.setTabOrder(self.info_experiment_date_sim, self.info_experiment_time_sim)
        ExperimentTracker.setTabOrder(self.info_experiment_time_sim, self.info_experiment_type_sim)
        ExperimentTracker.setTabOrder(self.info_experiment_type_sim, self.info_cell_depth_sim)
        ExperimentTracker.setTabOrder(self.info_cell_depth_sim, self.info_cell_region_sim)
        ExperimentTracker.setTabOrder(self.info_cell_region_sim, self.info_isoflurane_percent_sim)
        ExperimentTracker.setTabOrder(self.info_isoflurane_percent_sim, self.info_laser_power_sim)
        ExperimentTracker.setTabOrder(self.info_laser_power_sim, self.info_height_in_pixels_sim)
        ExperimentTracker.setTabOrder(self.info_height_in_pixels_sim, self.info_width_in_pixels_sim)
        ExperimentTracker.setTabOrder(self.info_width_in_pixels_sim, self.info_num_channels_sim)
        ExperimentTracker.setTabOrder(self.info_num_channels_sim, self.info_frame_rate_sim)
        ExperimentTracker.setTabOrder(self.info_frame_rate_sim, self.info_scan_method_sim)
        ExperimentTracker.setTabOrder(self.info_scan_method_sim, self.info_indicator_sim)
        ExperimentTracker.setTabOrder(self.info_indicator_sim, self.info_pipette_resistance_start_sim)
        ExperimentTracker.setTabOrder(self.info_pipette_resistance_start_sim, self.info_seal_resistance_start_sim)
        ExperimentTracker.setTabOrder(self.info_seal_resistance_start_sim, self.info_membrane_resistance_sim)
        ExperimentTracker.setTabOrder(self.info_membrane_resistance_sim, self.info_membrane_capacitance_sim)
        ExperimentTracker.setTabOrder(self.info_membrane_capacitance_sim, self.info_clamp_type_sim)
        ExperimentTracker.setTabOrder(self.info_clamp_type_sim, self.info_protocol_sim)
        ExperimentTracker.setTabOrder(self.info_protocol_sim, self.info_sampling_rate_sim)
        ExperimentTracker.setTabOrder(self.info_sampling_rate_sim, self.info_drug_administered_sim)
        ExperimentTracker.setTabOrder(self.info_drug_administered_sim, self.info_drug_concentration_micromolar_sim)
        ExperimentTracker.setTabOrder(self.info_drug_concentration_micromolar_sim, self.info_drug_route_of_admin_sim)
        ExperimentTracker.setTabOrder(self.info_drug_route_of_admin_sim, self.info_fname_imaging_sim)
        ExperimentTracker.setTabOrder(self.info_fname_imaging_sim, self.info_fname_ephys_sim)
        ExperimentTracker.setTabOrder(self.info_fname_ephys_sim, self.info_notes_sim)
        ExperimentTracker.setTabOrder(self.info_notes_sim, self.table_data_sim)
        ExperimentTracker.setTabOrder(self.table_data_sim, self.button_new_pipette_sim)
        ExperimentTracker.setTabOrder(self.button_new_pipette_sim, self.info_manipulator_angle_calc)
        ExperimentTracker.setTabOrder(self.info_manipulator_angle_calc, self.info_cell_dept_calc)
        ExperimentTracker.setTabOrder(self.info_cell_dept_calc, self.info_glass_distance_calc)
        ExperimentTracker.setTabOrder(self.info_glass_distance_calc, self.info_x_start_calc)
        ExperimentTracker.setTabOrder(self.info_x_start_calc, self.info_z_start_calc)

    def retranslateUi(self, ExperimentTracker):
        _translate = QtCore.QCoreApplication.translate
        _translate = QtCore.QCoreApplication.translate
        for i in range(self.tabWidget.count()):
            self.tabWidget.tabBar().setTabTextColor(i, QColor("white"))
        self.tabWidget.setStyleSheet("QTabBar::tab:!selected { color: white; background-color: darkGray; } QTabBar::tab:selected { color: white; background-color: gray; }")
        ExperimentTracker.setWindowTitle(_translate("ExperimentTracker", "Experiment Tracker"))
        self.animal_export_notes.setText(_translate("ExperimentTracker", "Export Notes"))
        self.animal_export_csv.setText(_translate("ExperimentTracker", "Export to CSV"))
        self.label_notes.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Notes:</span></p></body></html>"))
        self.button_select_all_notes_animal_info.setText(_translate("ExperimentTracker", "Select all"))
        self.button_copy_animal_info.setText(_translate("ExperimentTracker", "Copy"))
        self.button_clear_animal_info.setText(_translate("ExperimentTracker", "Clear"))
        self.label_dob.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Date of Birth:</span></p></body></html>"))
        self.label_species.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Species:</span></p></body></html>"))
        self.animal_species.setItemText(0, _translate("ExperimentTracker", "Mouse"))
        self.animal_species.setItemText(1, _translate("ExperimentTracker", "Rat"))
        self.animal_species.setItemText(2, _translate("ExperimentTracker", "Hydra"))
        self.label_strain.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Strain</span></p></body></html>"))
        self.animal_strain.setItemText(0, _translate("ExperimentTracker", "CD-1"))
        self.animal_strain.setItemText(1, _translate("ExperimentTracker", "C57BL6"))
        self.label_sex.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Sex:</span></p></body></html>"))
        self.animal_sex.setItemText(0, _translate("ExperimentTracker", "Female"))
        self.animal_sex.setItemText(1, _translate("ExperimentTracker", "Male"))
        self.label_cage_num.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cage Number:</span></p></body></html>"))
        self.animal_cage_number.setPlaceholderText(_translate("ExperimentTracker", "dm-xxxx"))
        self.label_animal_id.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Animal ID:</span></p></body></html>"))
        self.animal_id.setPlaceholderText(_translate("ExperimentTracker", "yyyymmdd"))
        self.label_sx_date.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Surgery Date</span></p></body></html>"))
        self.label_start_time.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Start Time</span></p></body></html>"))
        self.label_5.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Brain region:</span></p></body></html>"))
        self.animal_brain_region.setPlaceholderText(_translate("ExperimentTracker", "SSC, VC, PFC"))
        self.heading_animal_info.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Animal Info</span></p></body></html>"))
        self.animal_info_today_button.setText(_translate("ExperimentTracker", "Today"))
        self.animal_info_now_time_button.setText(_translate("ExperimentTracker", "Now"))
        self.label_12.setText(_translate("ExperimentTracker", "<html><head/><body><p><img src=\":/images/icon.png\"/></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.animal_info), _translate("ExperimentTracker", "Animal Info"))
        self.button_select_all_imaging.setText(_translate("ExperimentTracker", "Select all"))
        self.button_resize_columns_imaging.setText(_translate("ExperimentTracker", "Resize Columns"))
        self.label_pharmacology_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Pharmacology</span></p></body></html>"))
        self.label_drug_administered_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Drug administered</span></p></body></html>"))
        self.info_drug_administered_imaging.setPlaceholderText(_translate("ExperimentTracker", "Drug name"))
        self.label_drug_concentration_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Concentration (uM):</span></p></body></html>"))
        self.info_drug_concentration_micromolar_imaging.setPlaceholderText(_translate("ExperimentTracker", "Drug concentration"))
        self.label_drug_route_of_admin_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Route of Admin</span></p></body></html>"))
        self.info_drug_route_of_admin_imaging.setPlaceholderText(_translate("ExperimentTracker", "IV, IP, Local"))
        self.label_drug_exposure_time_start_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Exposure time start:</span></p></body></html>"))
        self.button_now_drug_imaging.setText(_translate("ExperimentTracker", "Now"))
        self.label_fname_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Filename:</span></p></body></html>"))
        self.info_fname_imaging.setPlaceholderText(_translate("ExperimentTracker", "TSeries-mmddyyyy-####-###"))
        self.label_11.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number:</span></p></body></html>"))
        self.label_file_info_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">File Info</span></p></body></html>"))
        self.button_clear_selection_imaging.setText(_translate("ExperimentTracker", "Clear selection"))
        self.label_notes_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Notes:</span></p></body></html>"))
        self.button_append_info_imaging.setText(_translate("ExperimentTracker", "Append Info"))
        self.button_export_notes_imaging.setText(_translate("ExperimentTracker", "Export Notes"))
        self.button_export_to_csv_imaging.setText(_translate("ExperimentTracker", "Export to CSV"))
        self.label_microscope_info_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Microscope Info</span></p></body></html>"))
        self.label_experiment_info_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experimental Conditions</span></p></body></html>"))
        self.label_experiment_date_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Date:</span></p></body></html>"))
        self.label_experiment_time_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Time:</span></p></body></html>"))
        self.label_experiment_type_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Type:</span></p></body></html>"))
        self.info_experiment_type_imaging.setItemText(0, _translate("ExperimentTracker", "Half Window"))
        self.info_experiment_type_imaging.setItemText(1, _translate("ExperimentTracker", "Chronic Window"))
        self.label_cell_depth_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell depth (um):</span></p></body></html>"))
        self.info_cell_depth_imaging.setPlaceholderText(_translate("ExperimentTracker", "150"))
        self.label_cell_region_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell region:</span></p></body></html>"))
        self.info_cell_region_imaging.setItemText(0, _translate("ExperimentTracker", "Soma"))
        self.info_cell_region_imaging.setItemText(1, _translate("ExperimentTracker", "Dendrite"))
        self.info_cell_region_imaging.setItemText(2, _translate("ExperimentTracker", "Axon"))
        self.label_isoflurane_percent_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Isoflurane %:</span></p></body></html>"))
        self.info_isoflurane_percent_imaging.setPlaceholderText(_translate("ExperimentTracker", "2.0"))
        self.label_laser_power_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Laser power:</span></p></body></html>"))
        self.label_height_in_pixels_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Height (pixels):</span></p></body></html>"))
        self.label_width_in_pixels_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Width (pixels):</span></p></body></html>"))
        self.label_num_channels_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number of channels:</span></p></body></html>"))
        self.label_frame_rate_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Frame rate:</span></p></body></html>"))
        self.info_laser_power_imaging.setPlaceholderText(_translate("ExperimentTracker", "120"))
        self.info_height_in_pixels_imaging.setPlaceholderText(_translate("ExperimentTracker", "512"))
        self.info_width_in_pixels_imaging.setPlaceholderText(_translate("ExperimentTracker", "512"))
        self.info_num_channels_imaging.setPlaceholderText(_translate("ExperimentTracker", "1"))
        self.info_frame_rate_imaging.setPlaceholderText(_translate("ExperimentTracker", "60"))
        self.label_scan_method_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Scan Method:</span></p></body></html>"))
        self.info_scan_method_imaging.setItemText(0, _translate("ExperimentTracker", "Resonant Galvo"))
        self.info_scan_method_imaging.setItemText(1, _translate("ExperimentTracker", "Spiral"))
        self.info_scan_method_imaging.setItemText(2, _translate("ExperimentTracker", "Galvo"))
        self.info_scan_method_imaging.setItemText(3, _translate("ExperimentTracker", "SLM"))
        self.label_indicator_imaging.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Indicator:</span></p></body></html>"))
        self.info_indicator_imaging.setItemText(0, _translate("ExperimentTracker", "spASAP5f"))
        self.info_indicator_imaging.setItemText(1, _translate("ExperimentTracker", "RFP-spASAP5f"))
        self.info_indicator_imaging.setItemText(2, _translate("ExperimentTracker", "Kv-ASAP5f"))
        self.info_indicator_imaging.setItemText(3, _translate("ExperimentTracker", "GCaMP6f"))
        self.info_indicator_imaging.setItemText(4, _translate("ExperimentTracker", "GCaMP6s"))
        self.info_indicator_imaging.setItemText(5, _translate("ExperimentTracker", "jR-GECO"))
        self.info_indicator_imaging.setItemText(6, _translate("ExperimentTracker", "jR-CAMP"))
        self.button_today_imaging.setText(_translate("ExperimentTracker", "Today"))
        self.button_now_imaging.setText(_translate("ExperimentTracker", "Now"))
        item = self.table_data_imaging.horizontalHeaderItem(0)
        item.setText(_translate("ExperimentTracker", "experiment_date"))
        item = self.table_data_imaging.horizontalHeaderItem(1)
        item.setText(_translate("ExperimentTracker", "experiment_time"))
        item = self.table_data_imaging.horizontalHeaderItem(2)
        item.setText(_translate("ExperimentTracker", "experiment_type"))
        item = self.table_data_imaging.horizontalHeaderItem(3)
        item.setText(_translate("ExperimentTracker", "cell_depth_in_microns"))
        item = self.table_data_imaging.horizontalHeaderItem(4)
        item.setText(_translate("ExperimentTracker", "cell_region"))
        item = self.table_data_imaging.horizontalHeaderItem(5)
        item.setText(_translate("ExperimentTracker", "isoflurane_percent"))
        item = self.table_data_imaging.horizontalHeaderItem(6)
        item.setText(_translate("ExperimentTracker", "laser_power"))
        item = self.table_data_imaging.horizontalHeaderItem(7)
        item.setText(_translate("ExperimentTracker", "height_in_pixels"))
        item = self.table_data_imaging.horizontalHeaderItem(8)
        item.setText(_translate("ExperimentTracker", "width_in_pixels"))
        item = self.table_data_imaging.horizontalHeaderItem(9)
        item.setText(_translate("ExperimentTracker", "num_channels"))
        item = self.table_data_imaging.horizontalHeaderItem(10)
        item.setText(_translate("ExperimentTracker", "scan_method"))
        item = self.table_data_imaging.horizontalHeaderItem(11)
        item.setText(_translate("ExperimentTracker", "frame_rate"))
        item = self.table_data_imaging.horizontalHeaderItem(12)
        item.setText(_translate("ExperimentTracker", "indicator"))
        item = self.table_data_imaging.horizontalHeaderItem(13)
        item.setText(_translate("ExperimentTracker", "drug_administered"))
        item = self.table_data_imaging.horizontalHeaderItem(14)
        item.setText(_translate("ExperimentTracker", "drug_concentration"))
        item = self.table_data_imaging.horizontalHeaderItem(15)
        item.setText(_translate("ExperimentTracker", "route_of_admin"))
        item = self.table_data_imaging.horizontalHeaderItem(16)
        item.setText(_translate("ExperimentTracker", "drug_exposure_start_time"))
        item = self.table_data_imaging.horizontalHeaderItem(17)
        item.setText(_translate("ExperimentTracker", "animal_id"))
        item = self.table_data_imaging.horizontalHeaderItem(18)
        item.setText(_translate("ExperimentTracker", "file_name"))
        item = self.table_data_imaging.horizontalHeaderItem(19)
        item.setText(_translate("ExperimentTracker", "notes"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.imaging_info), _translate("ExperimentTracker", "Imaging Info"))
        self.label_notes_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Notes:</span></p></body></html>"))
        self.button_append_info_ephys.setText(_translate("ExperimentTracker", "Append Info"))
        self.button_export_notes_ephys.setText(_translate("ExperimentTracker", "Export Notes"))
        self.button_export_to_csv_ephys.setText(_translate("ExperimentTracker", "Export to CSV"))
        self.table_data_ephys.setSortingEnabled(True)
        item = self.table_data_ephys.horizontalHeaderItem(0)
        item.setText(_translate("ExperimentTracker", "experiment_date"))
        item = self.table_data_ephys.horizontalHeaderItem(1)
        item.setText(_translate("ExperimentTracker", "experiment_time"))
        item = self.table_data_ephys.horizontalHeaderItem(2)
        item.setText(_translate("ExperimentTracker", "experiment_type"))
        item = self.table_data_ephys.horizontalHeaderItem(3)
        item.setText(_translate("ExperimentTracker", "cell_depth_in_microns"))
        item = self.table_data_ephys.horizontalHeaderItem(4)
        item.setText(_translate("ExperimentTracker", "cell_region"))
        item = self.table_data_ephys.horizontalHeaderItem(5)
        item.setText(_translate("ExperimentTracker", "isoflurane_percent"))
        item = self.table_data_ephys.horizontalHeaderItem(6)
        item.setText(_translate("ExperimentTracker", "internal_solution"))
        item = self.table_data_ephys.horizontalHeaderItem(7)
        item.setText(_translate("ExperimentTracker", "clamp_type"))
        item = self.table_data_ephys.horizontalHeaderItem(8)
        item.setText(_translate("ExperimentTracker", "protocol"))
        item = self.table_data_ephys.horizontalHeaderItem(9)
        item.setText(_translate("ExperimentTracker", "sampling_rate"))
        item = self.table_data_ephys.horizontalHeaderItem(10)
        item.setText(_translate("ExperimentTracker", "pipette_resistance"))
        item = self.table_data_ephys.horizontalHeaderItem(11)
        item.setText(_translate("ExperimentTracker", "seal_resistance"))
        item = self.table_data_ephys.horizontalHeaderItem(12)
        item.setText(_translate("ExperimentTracker", "membrane_resistance"))
        item = self.table_data_ephys.horizontalHeaderItem(13)
        item.setText(_translate("ExperimentTracker", "membrane_capacitance"))
        item = self.table_data_ephys.horizontalHeaderItem(14)
        item.setText(_translate("ExperimentTracker", "patch_region"))
        item = self.table_data_ephys.horizontalHeaderItem(15)
        item.setText(_translate("ExperimentTracker", "drug_administered"))
        item = self.table_data_ephys.horizontalHeaderItem(16)
        item.setText(_translate("ExperimentTracker", "drug_concentration"))
        item = self.table_data_ephys.horizontalHeaderItem(17)
        item.setText(_translate("ExperimentTracker", "route_of_admin"))
        item = self.table_data_ephys.horizontalHeaderItem(18)
        item.setText(_translate("ExperimentTracker", "drug_exposure_start_time"))
        item = self.table_data_ephys.horizontalHeaderItem(19)
        item.setText(_translate("ExperimentTracker", "animal_id"))
        item = self.table_data_ephys.horizontalHeaderItem(20)
        item.setText(_translate("ExperimentTracker", "file_name"))
        item = self.table_data_ephys.horizontalHeaderItem(21)
        item.setText(_translate("ExperimentTracker", "notes"))
        self.button_new_pipette_ephys.setText(_translate("ExperimentTracker", "New Pipette"))
        self.label_patch_info_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Patch Info</span></p></body></html>"))
        self.label_drug_administered_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Drug administration</span></p></body></html>"))
        self.info_drug_administered_ephys.setPlaceholderText(_translate("ExperimentTracker", "Drug name"))
        self.label_drug_concentration_micromolar_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Concentration (uM):</span></p></body></html>"))
        self.info_drug_concentration_micromolar_ephys.setPlaceholderText(_translate("ExperimentTracker", "Drug concentration"))
        self.label_drug_route_of_admin_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Route of admin</span></p></body></html>"))
        self.info_drug_route_of_admin_ephys.setPlaceholderText(_translate("ExperimentTracker", "IV, IP, Local"))
        self.label_drug_exposure_time_start_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Exposure time start:</span></p></body></html>"))
        self.button_now_drug_ephys.setText(_translate("ExperimentTracker", "Now"))
        self.label_pharmacology_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Pharmacology</span></p></body></html>"))
        self.label_experiment_date_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Date:</span></p></body></html>"))
        self.label_experiment_time_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Time:</span></p></body></html>"))
        self.label_experiment_type_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Type:</span></p></body></html>"))
        self.info_experiment_type_ephys.setItemText(0, _translate("ExperimentTracker", "Half Window"))
        self.info_experiment_type_ephys.setItemText(1, _translate("ExperimentTracker", "Chronic Window"))
        self.label_cell_depth_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell depth (um):</span></p></body></html>"))
        self.info_cell_depth_ephys.setPlaceholderText(_translate("ExperimentTracker", "150"))
        self.label_cell_region_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell region:</span></p></body></html>"))
        self.info_cell_region_ephys.setItemText(0, _translate("ExperimentTracker", "Soma"))
        self.info_cell_region_ephys.setItemText(1, _translate("ExperimentTracker", "Dendrite"))
        self.info_cell_region_ephys.setItemText(2, _translate("ExperimentTracker", "Axon"))
        self.label_isoflurane_percent_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Isoflurane %:</span></p></body></html>"))
        self.info_isoflurane_percent_ephys.setPlaceholderText(_translate("ExperimentTracker", "2.0"))
        self.label_clamp_type_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Clamp Type:</span></p></body></html>"))
        self.info_clamp_type_ephys.setItemText(0, _translate("ExperimentTracker", "Voltage"))
        self.info_clamp_type_ephys.setItemText(1, _translate("ExperimentTracker", "Current"))
        self.label_protocol_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Protocol:</span></p></body></html>"))
        self.info_protocol_ephys.setPlaceholderText(_translate("ExperimentTracker", "Ephys protocol"))
        self.label_sampling_rate_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Sampling Rate:</span></p></body></html>"))
        self.info_sampling_rate_ephys.setPlaceholderText(_translate("ExperimentTracker", "10000"))
        self.label_experiment_info_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experimental Conditions</span></p></body></html>"))
        self.button_clear_selection_ephys.setText(_translate("ExperimentTracker", "Clear selection"))
        self.label_fname_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Filename:</span></p></body></html>"))
        self.info_fname_ephys.setPlaceholderText(_translate("ExperimentTracker", "VoltageRecording-mmddyyy-####-###"))
        self.label_file_info_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">File Info</span></p></body></html>"))
        self.label_4.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Internal solution:</span></p></body></html>"))
        self.info_internal_solution_ephys.setItemText(0, _translate("ExperimentTracker", "High osmolarity"))
        self.info_internal_solution_ephys.setItemText(1, _translate("ExperimentTracker", "Normal osmolarity"))
        self.info_internal_solution_ephys.setItemText(2, _translate("ExperimentTracker", "Low osmolarity"))
        self.info_pipette_resistance_start_ephys.setPlaceholderText(_translate("ExperimentTracker", "5-8 (soma) 5-11 (dendrite)"))
        self.label_pipette_resistance_start_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Pipette resistance (start):</span></p></body></html>"))
        self.label_seal_resistance_start_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Seal resisance (start):</span></p></body></html>"))
        self.label_membrane_resistance_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Membrane resistance (MOhms):</span></p></body></html>"))
        self.label_capacitance_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Capacitance (pF):</span></p></body></html>"))
        self.label_2.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Patch region:</span></p></body></html>"))
        self.info_seal_resistance_start_ephys.setPlaceholderText(_translate("ExperimentTracker", ">1 GOhm"))
        self.info_membrane_resistance_ephys.setPlaceholderText(_translate("ExperimentTracker", "50-300 MOhm"))
        self.info_membrane_capacitance_ephys.setPlaceholderText(_translate("ExperimentTracker", "50-350 pF"))
        self.info_patch_region_ephys.setItemText(0, _translate("ExperimentTracker", "Soma"))
        self.info_patch_region_ephys.setItemText(1, _translate("ExperimentTracker", "Dendrite"))
        self.info_patch_region_ephys.setItemText(2, _translate("ExperimentTracker", "Axon"))
        self.button_select_all_ephys.setText(_translate("ExperimentTracker", "Select all"))
        self.label_recording_info_ephys.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Recording Info</span></p></body></html>"))
        self.button_resize_columns_ephys.setText(_translate("ExperimentTracker", "Resize Columns"))
        self.textBrowser_3.setHtml(_translate("ExperimentTracker", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:10pt; font-weight:600; color:#000000;\">Pressure info:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">PBS: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">1 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Brain entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">8 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Post entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">4 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Cell area: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">1.5 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Close to target: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">0.4 PSI</span></p></body></html>"))
        self.button_today_ephys.setText(_translate("ExperimentTracker", "Today"))
        self.label_10.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number:</span></p></body></html>"))
        self.button_now_ephys.setText(_translate("ExperimentTracker", "Now"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ephys_info), _translate("ExperimentTracker", "Ephys Info"))
        self.button_resize_columns_sim.setText(_translate("ExperimentTracker", "Resize Columns"))
        self.label_laser_power_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Laser power:</span></p></body></html>"))
        self.label_height_in_pixels_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Height (pixels):</span></p></body></html>"))
        self.label_width_in_pixels_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Width (pixels):</span></p></body></html>"))
        self.label_num_channels_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number of channels:</span></p></body></html>"))
        self.label_frame_rate_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Frame rate:</span></p></body></html>"))
        self.info_laser_power_sim.setPlaceholderText(_translate("ExperimentTracker", "120"))
        self.info_height_in_pixels_sim.setPlaceholderText(_translate("ExperimentTracker", "512"))
        self.info_width_in_pixels_sim.setPlaceholderText(_translate("ExperimentTracker", "512"))
        self.info_num_channels_sim.setPlaceholderText(_translate("ExperimentTracker", "1"))
        self.info_frame_rate_sim.setPlaceholderText(_translate("ExperimentTracker", "60"))
        self.label_scan_method_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Scan Method:</span></p></body></html>"))
        self.info_scan_method_sim.setItemText(0, _translate("ExperimentTracker", "Resonant Galvo"))
        self.info_scan_method_sim.setItemText(1, _translate("ExperimentTracker", "Spiral"))
        self.info_scan_method_sim.setItemText(2, _translate("ExperimentTracker", "Galvo"))
        self.info_scan_method_sim.setItemText(3, _translate("ExperimentTracker", "SLM"))
        self.label_indicator_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Indicator:</span></p></body></html>"))
        self.info_indicator_sim.setItemText(0, _translate("ExperimentTracker", "spASAP5f"))
        self.info_indicator_sim.setItemText(1, _translate("ExperimentTracker", "RFP-spASAP5f"))
        self.info_indicator_sim.setItemText(2, _translate("ExperimentTracker", "Kv-ASAP5f"))
        self.info_indicator_sim.setItemText(3, _translate("ExperimentTracker", "GCaMP6f"))
        self.info_indicator_sim.setItemText(4, _translate("ExperimentTracker", "GCaMP6s"))
        self.info_indicator_sim.setItemText(5, _translate("ExperimentTracker", "jR-GECO"))
        self.info_indicator_sim.setItemText(6, _translate("ExperimentTracker", "jR-CAMP"))
        self.label_patch_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Patch Info</span></p></body></html>"))
        self.label_drug_administered_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Drug administration</span></p></body></html>"))
        self.info_drug_administered_sim.setPlaceholderText(_translate("ExperimentTracker", "Drug name"))
        self.label_drug_concentration_micromolar_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Concentration (uM):</span></p></body></html>"))
        self.info_drug_concentration_micromolar_sim.setPlaceholderText(_translate("ExperimentTracker", "Drug concentration"))
        self.label_drug_route_of_admin_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Route of admin</span></p></body></html>"))
        self.info_drug_route_of_admin_sim.setPlaceholderText(_translate("ExperimentTracker", "IV, IP, Local"))
        self.label_exposure_time_start_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Exposure time start:</span></p></body></html>"))
        self.button_now_drug_sim.setText(_translate("ExperimentTracker", "Now"))
        self.label_drug_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Pharmacology</span></p></body></html>"))
        self.label_experiment_date_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Date:</span></p></body></html>"))
        self.label_experiment_time_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Time:</span></p></body></html>"))
        self.label_experiment_type_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experiment Type:</span></p></body></html>"))
        self.info_experiment_type_sim.setItemText(0, _translate("ExperimentTracker", "Half Window"))
        self.info_experiment_type_sim.setItemText(1, _translate("ExperimentTracker", "Chronic Window"))
        self.label_cell_depth_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell depth (um):</span></p></body></html>"))
        self.info_cell_depth_sim.setPlaceholderText(_translate("ExperimentTracker", "150"))
        self.label_cell_region_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell region:</span></p></body></html>"))
        self.info_cell_region_sim.setItemText(0, _translate("ExperimentTracker", "Soma"))
        self.info_cell_region_sim.setItemText(1, _translate("ExperimentTracker", "Dendrite"))
        self.info_cell_region_sim.setItemText(2, _translate("ExperimentTracker", "Axon"))
        self.label_isoflurane_percent_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Isoflurane %:</span></p></body></html>"))
        self.info_isoflurane_percent_sim.setPlaceholderText(_translate("ExperimentTracker", "2.0"))
        self.button_new_pipette_sim.setText(_translate("ExperimentTracker", "New Pipette"))
        self.label_notes_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Notes:</span></p></body></html>"))
        self.label_microscope_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Microscope Info</span></p></body></html>"))
        self.label_pipette_resistance_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Pipette resistance (start):</span></p></body></html>"))
        self.info_pipette_resistance_start_sim.setPlaceholderText(_translate("ExperimentTracker", "5-8 (soma) 5-11 (dendrite)"))
        self.label_seal_resistance_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Seal resisance (start):</span></p></body></html>"))
        self.info_seal_resistance_start_sim.setPlaceholderText(_translate("ExperimentTracker", ">1 GOhm"))
        self.label_membrane_resistance_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Membrane resistance (MOhms):</span></p></body></html>"))
        self.info_membrane_resistance_sim.setPlaceholderText(_translate("ExperimentTracker", "50-300 MOhm"))
        self.label_capacitance_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Capacitance (pF):</span></p></body></html>"))
        self.info_membrane_capacitance_sim.setPlaceholderText(_translate("ExperimentTracker", "50-350 pF"))
        self.info_patch_region_sim.setItemText(0, _translate("ExperimentTracker", "Soma"))
        self.info_patch_region_sim.setItemText(1, _translate("ExperimentTracker", "Dendrite"))
        self.info_patch_region_sim.setItemText(2, _translate("ExperimentTracker", "Axon"))
        self.label.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Patch region:</span></p></body></html>"))
        self.label_3.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Internal solution:</span></p></body></html>"))
        self.info_internal_solution_sim.setItemText(0, _translate("ExperimentTracker", "High osmolarity"))
        self.info_internal_solution_sim.setItemText(1, _translate("ExperimentTracker", "Normal osmolarity"))
        self.info_internal_solution_sim.setItemText(2, _translate("ExperimentTracker", "Low osmolarity"))
        self.textBrowser_2.setHtml(_translate("ExperimentTracker", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:10pt; font-weight:600; color:#000000;\">Pressure info:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">PBS: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">1 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Brain entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">8 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Post entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">4 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Cell area: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">1.5 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:8pt; color:#000000;\">Close to target: </span><span style=\" font-family:\'Sans Serif\'; font-size:8pt; font-weight:600; color:#000000;\">0.4 PSI</span></p></body></html>"))
        self.label_9.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number:</span></p></body></html>"))
        self.info_fname_ephys_sim.setPlaceholderText(_translate("ExperimentTracker", "VoltageRecording-mmddyyy-####"))
        self.label_fname_ehys_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Ephys filename:</span></p></body></html>"))
        self.label_fname_imaging_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Imaging filename:</span></p></body></html>"))
        self.info_fname_imaging_sim.setPlaceholderText(_translate("ExperimentTracker", "TSeries-mmddyyyy-####"))
        self.label_8.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Number:</span></p></body></html>"))
        self.button_now_sim.setText(_translate("ExperimentTracker", "Now"))
        self.label_recording_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Recording Info</span></p></body></html>"))
        self.label_clamp_type_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Clamp type:</span></p></body></html>"))
        self.info_clamp_type_sim.setItemText(0, _translate("ExperimentTracker", "Voltage"))
        self.info_clamp_type_sim.setItemText(1, _translate("ExperimentTracker", "Current"))
        self.label_protocol_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Protocol:</span></p></body></html>"))
        self.info_protocol_sim.setPlaceholderText(_translate("ExperimentTracker", "Ephys protocol"))
        self.label_sampling_rate_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Sampling rate:</span></p></body></html>"))
        self.info_sampling_rate_sim.setPlaceholderText(_translate("ExperimentTracker", "10000"))
        item = self.table_data_sim.horizontalHeaderItem(0)
        item.setText(_translate("ExperimentTracker", "experiment_date"))
        item = self.table_data_sim.horizontalHeaderItem(1)
        item.setText(_translate("ExperimentTracker", "experiment_time"))
        item = self.table_data_sim.horizontalHeaderItem(2)
        item.setText(_translate("ExperimentTracker", "experiment_type"))
        item = self.table_data_sim.horizontalHeaderItem(3)
        item.setText(_translate("ExperimentTracker", "cell_depth_in_microns"))
        item = self.table_data_sim.horizontalHeaderItem(4)
        item.setText(_translate("ExperimentTracker", "cell_region"))
        item = self.table_data_sim.horizontalHeaderItem(5)
        item.setText(_translate("ExperimentTracker", "isoflurane_percent"))
        item = self.table_data_sim.horizontalHeaderItem(6)
        item.setText(_translate("ExperimentTracker", "laser_power"))
        item = self.table_data_sim.horizontalHeaderItem(7)
        item.setText(_translate("ExperimentTracker", "height_in_pixels"))
        item = self.table_data_sim.horizontalHeaderItem(8)
        item.setText(_translate("ExperimentTracker", "width_in_pixels"))
        item = self.table_data_sim.horizontalHeaderItem(9)
        item.setText(_translate("ExperimentTracker", "num_channels"))
        item = self.table_data_sim.horizontalHeaderItem(10)
        item.setText(_translate("ExperimentTracker", "scan_method"))
        item = self.table_data_sim.horizontalHeaderItem(11)
        item.setText(_translate("ExperimentTracker", "frame_rate"))
        item = self.table_data_sim.horizontalHeaderItem(12)
        item.setText(_translate("ExperimentTracker", "indicator"))
        item = self.table_data_sim.horizontalHeaderItem(13)
        item.setText(_translate("ExperimentTracker", "internal_solution"))
        item = self.table_data_sim.horizontalHeaderItem(14)
        item.setText(_translate("ExperimentTracker", "clamp_type"))
        item = self.table_data_sim.horizontalHeaderItem(15)
        item.setText(_translate("ExperimentTracker", "protocol"))
        item = self.table_data_sim.horizontalHeaderItem(16)
        item.setText(_translate("ExperimentTracker", "sampling_rate"))
        item = self.table_data_sim.horizontalHeaderItem(17)
        item.setText(_translate("ExperimentTracker", "pipette_resistance"))
        item = self.table_data_sim.horizontalHeaderItem(18)
        item.setText(_translate("ExperimentTracker", "seal_resistance"))
        item = self.table_data_sim.horizontalHeaderItem(19)
        item.setText(_translate("ExperimentTracker", "membrane_resistance"))
        item = self.table_data_sim.horizontalHeaderItem(20)
        item.setText(_translate("ExperimentTracker", "membrane_capacitance"))
        item = self.table_data_sim.horizontalHeaderItem(21)
        item.setText(_translate("ExperimentTracker", "patch_region"))
        item = self.table_data_sim.horizontalHeaderItem(22)
        item.setText(_translate("ExperimentTracker", "drug_administered"))
        item = self.table_data_sim.horizontalHeaderItem(23)
        item.setText(_translate("ExperimentTracker", "drug_concentration"))
        item = self.table_data_sim.horizontalHeaderItem(24)
        item.setText(_translate("ExperimentTracker", "route_of_admin"))
        item = self.table_data_sim.horizontalHeaderItem(25)
        item.setText(_translate("ExperimentTracker", "drug_exposure_start_time"))
        item = self.table_data_sim.horizontalHeaderItem(26)
        item.setText(_translate("ExperimentTracker", "animal_id"))
        item = self.table_data_sim.horizontalHeaderItem(27)
        item.setText(_translate("ExperimentTracker", "imaging_file_name"))
        item = self.table_data_sim.horizontalHeaderItem(28)
        item.setText(_translate("ExperimentTracker", "ephys_file_name"))
        item = self.table_data_sim.horizontalHeaderItem(29)
        item.setText(_translate("ExperimentTracker", "notes"))
        self.label_file_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">File Info</span></p></body></html>"))
        self.button_select_all_sim.setText(_translate("ExperimentTracker", "Select all"))
        self.label_experiment_info_sim.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Experimental Conditions</span></p></body></html>"))
        self.button_today_sim.setText(_translate("ExperimentTracker", "Today"))
        self.button_clear_selection_sim.setText(_translate("ExperimentTracker", "Clear selection"))
        self.button_append_info_sim.setText(_translate("ExperimentTracker", "Append Info"))
        self.button_export_notes_sim.setText(_translate("ExperimentTracker", "Export Notes"))
        self.button_export_to_csv_sim.setText(_translate("ExperimentTracker", "Export to CSV"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.simultaneous_info), _translate("ExperimentTracker", "Simultaneous Info"))
        self.button_clear_pipette_calculator.setText(_translate("ExperimentTracker", "Clear"))
        self.button_pipette_calculate.setText(_translate("ExperimentTracker", "Calcuate"))
        self.label_manipulator_angle_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Manipulator angle (degrees):</span></p></body></html>"))
        self.info_manipulator_angle_calc.setPlaceholderText(_translate("ExperimentTracker", "20"))
        self.label_cell_depth_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell depth (um):</span></p></body></html>"))
        self.info_cell_dept_calc.setPlaceholderText(_translate("ExperimentTracker", "150"))
        self.label_cell_glass_distance_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Cell distance from glass (um):</span></p></body></html>"))
        self.info_glass_distance_calc.setPlaceholderText(_translate("ExperimentTracker", "100"))
        self.label_manipulator_x_start_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Manipulator X start:</span></p></body></html>"))
        self.info_x_start_calc.setPlaceholderText(_translate("ExperimentTracker", "12000"))
        self.label_manipulator_z_start_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Manipulator Z start:</span></p></body></html>"))
        self.info_z_start_calc.setPlaceholderText(_translate("ExperimentTracker", "5500"))
        self.label_start_info.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Start Info</span></p></body></html>"))
        self.label_entry_dist_from_cell_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Brain entry distance from cell (um):</span></p></body></html>"))
        self.info_entry_dist_from_cell_calc.setText(_translate("ExperimentTracker", "0"))
        self.label_entry_dist_from_glass_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Brain entry distance from glass (um):</span></p></body></html>"))
        self.info_entry_dist_from_glass_calc.setText(_translate("ExperimentTracker", "0"))
        self.label_x_tar_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">X target:</span></p></body></html>"))
        self.info_x_tar_calc.setText(_translate("ExperimentTracker", "0"))
        self.label_z_tar_calc.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Z target:</span></p></body></html>"))
        self.info_z_tar_calc.setText(_translate("ExperimentTracker", "0"))
        self.label_target_locs.setText(_translate("ExperimentTracker", "<html><head/><body><p><span style=\" color:#ffffff;\">Target Locations</span></p></body></html>"))
        self.textBrowser.setHtml(_translate("ExperimentTracker", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">Pressure info:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; color:#000000;\">PBS: </span><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">1 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; color:#000000;\">Brain entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">8 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; color:#000000;\">Post entry: </span><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">4 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; color:#000000;\">Cell area: </span><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">1.5 PSI</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:12pt; color:#000000;\">Close to target: </span><span style=\" font-family:\'Sans Serif\'; font-size:12pt; font-weight:600; color:#000000;\">0.4 PSI</span></p></body></html>"))
        self.textBrowser_4.setHtml(_translate("ExperimentTracker", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600;\">Notes:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">XYZ positions are in unit microns.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a name=\"page59R_mcid17\"></a><span style=\" font-family:\'serif\'; font-size:12pt;\">I</span><span style=\" font-family:\'serif\'; font-size:12pt;\">f changing manipulator angle, diagonal movement must be configured correctly. See &quot;Manipulator Angle Config&quot; for more info.</span></p></body></html>"))
        self.label_6.setText(_translate("ExperimentTracker", "<html><head/><body><p><img src=\":/images/z-projection_patch.png\"/></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.pipette_calculator), _translate("ExperimentTracker", "Pipette Calculator"))
        self.label_7.setText(_translate("ExperimentTracker", "<html><head/><body><p><img src=\":/images/manipulatorAsset 1.png\"/></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("ExperimentTracker", "Manipulator Angle Config"))

import resources_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ExperimentTracker = QtWidgets.QMainWindow()
    ui = Ui_ExperimentTracker()
    ui.setupUi(ExperimentTracker)
    ExperimentTracker.show()
    sys.exit(app.exec_())

